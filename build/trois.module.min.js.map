{"version":3,"file":"trois.module.min.js","sources":["../src/tools.ts","../src/controls/Controls.ts","../src/controls/OrbitControls.ts","../src/core/useRaycaster.ts","../src/core/usePointer.ts","../src/core/useThree.ts","../src/core/Renderer.ts","../src/core/Camera.ts","../src/core/OrthographicCamera.ts","../src/core/PerspectiveCamera.ts","../src/core/Scene.ts","../src/core/Object3D.ts","../src/core/Group.ts","../src/core/Raycaster.ts","../src/core/CubeCamera.ts","../src/meshes/Mesh.ts","../src/geometries/Geometry.ts","../src/geometries/BoxGeometry.ts","../src/geometries/CircleGeometry.ts","../src/geometries/ConeGeometry.ts","../src/geometries/CylinderGeometry.ts","../src/geometries/DodecahedronGeometry.ts","../src/geometries/ExtrudeGeometry.ts","../src/geometries/IcosahedronGeometry.ts","../src/geometries/LatheGeometry.ts","../src/geometries/OctahedronGeometry.ts","../src/geometries/PlaneGeometry.ts","../src/geometries/PolyhedronGeometry.ts","../src/geometries/RingGeometry.ts","../src/geometries/SphereGeometry.ts","../src/geometries/ShapeGeometry.ts","../src/geometries/TetrahedronGeometry.ts","../src/geometries/TorusGeometry.ts","../src/geometries/TorusKnotGeometry.ts","../src/geometries/TubeGeometry.ts","../src/lights/Light.ts","../src/lights/AmbientLight.ts","../src/lights/DirectionalLight.ts","../src/lights/HemisphereLight.ts","../src/lights/PointLight.ts","../src/lights/RectAreaLight.ts","../src/lights/SpotLight.ts","../src/materials/Material.ts","../src/materials/MatcapMaterial.ts","../src/materials/ShaderMaterial.ts","../src/materials/SubsurfaceScatteringShader.ts","../src/materials/SubSurfaceMaterial.ts","../src/materials/Texture.ts","../src/materials/CubeTexture.ts","../src/materials/VideoTexture.ts","../src/meshes/Box.ts","../src/meshes/Circle.ts","../src/meshes/Cone.ts","../src/meshes/Cylinder.ts","../src/meshes/Dodecahedron.ts","../src/meshes/Icosahedron.ts","../src/meshes/Lathe.ts","../src/meshes/Octahedron.ts","../src/meshes/Plane.ts","../src/meshes/Polyhedron.ts","../src/meshes/Ring.ts","../src/meshes/Sphere.ts","../src/meshes/Tetrahedron.ts","../src/meshes/Text.ts","../src/meshes/Torus.ts","../src/meshes/TorusKnot.ts","../src/meshes/Tube.ts","../src/meshes/Image.ts","../src/meshes/InstancedMesh.ts","../src/meshes/Sprite.ts","../src/meshes/Points.ts","../src/models/Model.ts","../src/models/GLTF.ts","../src/models/FBX.ts","../src/effects/EffectComposer.ts","../src/effects/EffectPass.ts","../src/effects/RenderPass.ts","../src/effects/BokehPass.ts","../src/effects/FilmPass.ts","../src/effects/FXAAPass.ts","../src/effects/HalftonePass.ts","../src/effects/SMAAPass.ts","../src/effects/SSAOPass.ts","../src/shaders/default.ts","../src/shaders/TiltShift.ts","../src/effects/TiltShiftPass.ts","../src/effects/UnrealBloomPass.ts","../src/shaders/ZoomBlur.ts","../src/effects/ZoomBlurPass.ts","../src/helpers/GridHelper.ts","../src/plugin.ts","../src/use/useTextures.ts"],"sourcesContent":["import { ref, toRef, watch, WatchStopHandle } from 'vue'\n\ntype OptionSetter = (dst: any, key: string, value: any) => void\n\nexport function applyObjectProps(\n  dst: any,\n  options: Record<string, unknown>,\n  setter?: OptionSetter\n): void {\n  if (options instanceof Object) {\n    Object.entries(options).forEach(([key, value]) => {\n      if (setter) setter(dst, key, value)\n      else dst[key] = value\n    })\n  }\n}\n\nexport function bindObjectProp(\n  src: any,\n  prop: string,\n  dst: any,\n  apply = true,\n  setter?: OptionSetter\n): WatchStopHandle {\n  if (apply) applyObjectProps(dst, src[prop], setter)\n  const r = toRef(src, prop)\n  return watch(r, (value) => { applyObjectProps(dst, value, setter) })\n}\n\nexport function bindObjectProps(\n  src: any,\n  dst: any,\n  apply = true,\n  setter?: OptionSetter\n): WatchStopHandle {\n  if (apply) applyObjectProps(dst, src, setter)\n  const r = ref(src)\n  return watch(r, (value) => { applyObjectProps(dst, value, setter) }, { deep: true })\n}\n\nexport function setFromProp(o: Record<string, unknown>, prop: Record<string, unknown>): void {\n  if (prop instanceof Object) {\n    Object.entries(prop).forEach(([key, value]) => {\n      o[key] = value\n    })\n  }\n}\n\nexport function bindProps(src: any, props: string[], dst: any): void {\n  props.forEach(prop => {\n    bindProp(src, prop, dst, prop)\n  })\n}\n\nexport function bindProp(src: any, srcProp: string, dst: any, dstProp?: string): void {\n  const _dstProp = dstProp || srcProp\n  const ref = toRef(src, srcProp)\n  if (ref.value instanceof Object) {\n    setFromProp(dst[_dstProp], ref.value)\n    watch(ref, (value) => { setFromProp(dst[_dstProp], value) }, { deep: true })\n  } else {\n    if (ref.value !== undefined) dst[_dstProp] = src[srcProp]\n    watch(ref, (value) => { dst[_dstProp] = value })\n  }\n}\n\nexport function propsValues(props: Record<string, unknown>, exclude: string[] = []): Record<string, unknown> {\n  const values: Record<string, unknown> = {}\n  Object.entries(props).forEach(([key, value]) => {\n    if (!exclude || !exclude.includes(key)) {\n      values[key] = value\n    }\n  })\n  return values\n}\n\nexport function lerp(value1: number, value2: number, amount: number): number {\n  amount = amount < 0 ? 0 : amount\n  amount = amount > 1 ? 1 : amount\n  return value1 + (value2 - value1) * amount\n}\n\nexport function limit(val: number, min: number, max: number): number {\n  return val < min ? min : (val > max ? max : val)\n}\n\n// from https://github.com/pmndrs/drei/blob/master/src/useMatcapTexture.tsx\nconst MATCAP_ROOT = 'https://rawcdn.githack.com/emmelleppi/matcaps/9b36ccaaf0a24881a39062d05566c9e92be4aa0d'\nconst DEFAULT_MATCAP = '0404E8_0404B5_0404CB_3333FC'\n\nexport function getMatcapUrl(hash = DEFAULT_MATCAP, format = 1024): string {\n  const fileName = `${hash}${getMatcapFormatString(format)}.png`\n  return `${MATCAP_ROOT}/${format}/${fileName}`\n}\n\nfunction getMatcapFormatString(format: number) {\n  switch (format) {\n    case 64:\n      return '-64px'\n    case 128:\n      return '-128px'\n    case 256:\n      return '-256px'\n    case 512:\n      return '-512px'\n    default:\n      return ''\n  }\n}\n","// @ts-nocheck\n\n// import { EventDispatcher } from '../core/EventDispatcher.js';\nimport { EventDispatcher } from 'three';\n\n/**\n * Abstract base class for controls.\n *\n * @abstract\n * @augments EventDispatcher\n */\nclass Controls extends EventDispatcher {\n\n\t/**\n\t * Constructs a new controls instance.\n\t *\n\t * @param {Object3D} object - The object that is managed by the controls.\n\t * @param {?HTMLDOMElement} domElement - The HTML element used for event listeners.\n\t */\n\tconstructor( object, domElement = null ) {\n\n\t\tsuper();\n\n\t\t/**\n\t\t * The object that is managed by the controls.\n\t\t *\n\t\t * @type {Object3D}\n\t\t */\n\t\tthis.object = object;\n\n\t\t/**\n\t\t * The HTML element used for event listeners.\n\t\t *\n\t\t * @type {?HTMLDOMElement}\n\t\t * @default null\n\t\t */\n\t\tthis.domElement = domElement;\n\n\t\t/**\n\t\t * Whether the controls responds to user input or not.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.enabled = true;\n\n\t\t/**\n\t\t * The internal state of the controls.\n\t\t *\n\t\t * @type {number}\n\t\t * @default -1\n\t\t */\n\t\tthis.state = - 1;\n\n\t\t/**\n\t\t * This object defines the keyboard input of the controls.\n\t\t *\n\t\t * @type {Object}\n\t\t */\n\t\tthis.keys = {};\n\n\t\t/**\n\t\t * This object defines what type of actions are assigned to the available mouse buttons.\n\t\t * It depends on the control implementation what kind of mouse buttons and actions are supported.\n\t\t *\n\t\t * @type {{LEFT: ?number, MIDDLE: ?number, RIGHT: ?number}}\n\t\t */\n\t\tthis.mouseButtons = { LEFT: null, MIDDLE: null, RIGHT: null };\n\n\t\t/**\n\t\t * This object defines what type of actions are assigned to what kind of touch interaction.\n\t\t * It depends on the control implementation what kind of touch interaction and actions are supported.\n\t\t *\n\t\t * @type {{ONE: ?number, TWO: ?number}}\n\t\t */\n\t\tthis.touches = { ONE: null, TWO: null };\n\n\t}\n\n\t/**\n\t * Connects the controls to the DOM. This method has so called \"side effects\" since\n\t * it adds the module's event listeners to the DOM.\n\t */\n\tconnect() {}\n\n\t/**\n\t * Disconnects the controls from the DOM.\n\t */\n\tdisconnect() {}\n\n\t/**\n\t * Call this method if you no longer want use to the controls. It frees all internal\n\t * resources and removes all event listeners.\n\t */\n\tdispose() {}\n\n\t/**\n\t * Controls should implement this method if they have to update their internal state\n\t * per simulation step.\n\t *\n\t * @param {number} [delta] - The time delta in seconds.\n\t */\n\tupdate( /* delta */ ) {}\n\n}\n\nexport { Controls };","//@ts-nocheck\n\nimport {\n\tMOUSE,\n\tQuaternion,\n\tSpherical,\n\tTOUCH,\n\tVector2,\n\tVector3,\n\tPlane,\n\tRay,\n\tMathUtils\n} from 'three';\nimport { Controls } from './Controls';\n\n/**\n * Fires when the camera has been transformed by the controls.\n *\n * @event OrbitControls#change\n * @type {Object}\n */\nconst _changeEvent = { type: 'change' };\n\n/**\n * Fires when an interaction was initiated.\n *\n * @event OrbitControls#start\n * @type {Object}\n */\nconst _startEvent = { type: 'start' };\n\n/**\n * Fires when an interaction has finished.\n *\n * @event OrbitControls#end\n * @type {Object}\n */\nconst _endEvent = { type: 'end' };\n\nconst _ray = new Ray();\nconst _plane = new Plane();\nconst _TILT_LIMIT = Math.cos( 70 * MathUtils.DEG2RAD );\n\nconst _v = new Vector3();\nconst _twoPI = 2 * Math.PI;\n\nconst _STATE = {\n\tNONE: - 1,\n\tROTATE: 0,\n\tDOLLY: 1,\n\tPAN: 2,\n\tTOUCH_ROTATE: 3,\n\tTOUCH_PAN: 4,\n\tTOUCH_DOLLY_PAN: 5,\n\tTOUCH_DOLLY_ROTATE: 6\n};\nconst _EPS = 0.000001;\n\n\n/**\n * Orbit controls allow the camera to orbit around a target.\n *\n * OrbitControls performs orbiting, dollying (zooming), and panning. Unlike {@link TrackballControls},\n * it maintains the \"up\" direction `object.up` (+Y by default).\n *\n * - Orbit: Left mouse / touch: one-finger move.\n * - Zoom: Middle mouse, or mousewheel / touch: two-finger spread or squish.\n * - Pan: Right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move.\n *\n * ```js\n * const controls = new OrbitControls( camera, renderer.domElement );\n *\n * // controls.update() must be called after any manual changes to the camera's transform\n * camera.position.set( 0, 20, 100 );\n * controls.update();\n *\n * function animate() {\n *\n * \t// required if controls.enableDamping or controls.autoRotate are set to true\n * \tcontrols.update();\n *\n * \trenderer.render( scene, camera );\n *\n * }\n * ```\n *\n * @augments Controls\n */\nclass OrbitControls extends Controls {\n\n\t/**\n\t * Constructs a new controls instance.\n\t *\n\t * @param {Object3D} object - The object that is managed by the controls.\n\t * @param {?HTMLDOMElement} domElement - The HTML element used for event listeners.\n\t */\n\tconstructor( object, domElement = null ) {\n\n\t\tsuper( object, domElement );\n\n\t\tthis.state = _STATE.NONE;\n\n\t\t/**\n\t\t * The focus point of the controls, the `object` orbits around this.\n\t\t * It can be updated manually at any point to change the focus of the controls.\n\t\t *\n\t\t * @type {Vector3}\n\t\t */\n\t\tthis.target = new Vector3();\n\n\t\t/**\n\t\t * The focus point of the `minTargetRadius` and `maxTargetRadius` limits.\n\t\t * It can be updated manually at any point to change the center of interest\n\t\t * for the `target`.\n\t\t *\n\t\t * @type {Vector3}\n\t\t */\n\t\tthis.cursor = new Vector3();\n\n\t\t/**\n\t\t * How far you can dolly in (perspective camera only).\n\t\t *\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis.minDistance = 0;\n\n\t\t/**\n\t\t * How far you can dolly out (perspective camera only).\n\t\t *\n\t\t * @type {number}\n\t\t * @default Infinity\n\t\t */\n\t\tthis.maxDistance = Infinity;\n\n\t\t/**\n\t\t * How far you can zoom in (orthographic camera only).\n\t\t *\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis.minZoom = 0;\n\n\t\t/**\n\t\t * How far you can zoom out (orthographic camera only).\n\t\t *\n\t\t * @type {number}\n\t\t * @default Infinity\n\t\t */\n\t\tthis.maxZoom = Infinity;\n\n\t\t/**\n\t\t * How close you can get the target to the 3D `cursor`.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis.minTargetRadius = 0;\n\n\t\t/**\n\t\t * How far you can move the target from the 3D `cursor`.\n\t\t *\n\t\t * @type {number}\n\t\t * @default Infinity\n\t\t */\n\t\tthis.maxTargetRadius = Infinity;\n\n\t\t/**\n\t\t * How far you can orbit vertically, lower limit. Range is `[0, Math.PI]` radians.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 0\n\t\t */\n\t\tthis.minPolarAngle = 0;\n\n\t\t/**\n\t\t * How far you can orbit vertically, upper limit. Range is `[0, Math.PI]` radians.\n\t\t *\n\t\t * @type {number}\n\t\t * @default Math.PI\n\t\t */\n\t\tthis.maxPolarAngle = Math.PI;\n\n\t\t/**\n\t\t * How far you can orbit horizontally, lower limit. If set, the interval `[ min, max ]`\n\t\t * must be a sub-interval of `[ - 2 PI, 2 PI ]`, with `( max - min < 2 PI )`.\n\t\t *\n\t\t * @type {number}\n\t\t * @default -Infinity\n\t\t */\n\t\tthis.minAzimuthAngle = - Infinity;\n\n\t\t/**\n\t\t * How far you can orbit horizontally, upper limit. If set, the interval `[ min, max ]`\n\t\t * must be a sub-interval of `[ - 2 PI, 2 PI ]`, with `( max - min < 2 PI )`.\n\t\t *\n\t\t * @type {number}\n\t\t * @default -Infinity\n\t\t */\n\t\tthis.maxAzimuthAngle = Infinity;\n\n\t\t/**\n\t\t * Set to `true` to enable damping (inertia), which can be used to give a sense of weight\n\t\t * to the controls. Note that if this is enabled, you must call `update()` in your animation\n\t\t * loop.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.enableDamping = false;\n\n\t\t/**\n\t\t * The damping inertia used if `enableDamping` is set to `true`.\n\t\t *\n\t\t * Note that for this to work, you must call `update()` in your animation loop.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 0.05\n\t\t */\n\t\tthis.dampingFactor = 0.05;\n\n\t\t/**\n\t\t * Enable or disable zooming (dollying) of the camera.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.enableZoom = true;\n\n\t\t/**\n\t\t * Speed of zooming / dollying.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 1\n\t\t */\n\t\tthis.zoomSpeed = 1.0;\n\n\t\t/**\n\t\t * Enable or disable horizontal and vertical rotation of the camera.\n\t\t *\n\t\t * Note that it is possible to disable a single axis by setting the min and max of the\n\t\t * `minPolarAngle` or `minAzimuthAngle` to the same value, which will cause the vertical\n\t\t * or horizontal rotation to be fixed at that value.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.enableRotate = true;\n\n\t\t/**\n\t\t * Speed of rotation.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 1\n\t\t */\n\t\tthis.rotateSpeed = 1.0;\n\n\t\t/**\n\t\t * How fast to rotate the camera when the keyboard is used.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 1\n\t\t */\n\t\tthis.keyRotateSpeed = 1.0;\n\n\t\t/**\n\t\t * Enable or disable camera panning.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.enablePan = true;\n\n\t\t/**\n\t\t * Speed of panning.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 1\n\t\t */\n\t\tthis.panSpeed = 1.0;\n\n\t\t/**\n\t\t * Defines how the camera's position is translated when panning. If `true`, the camera pans\n\t\t * in screen space. Otherwise, the camera pans in the plane orthogonal to the camera's up\n\t\t * direction.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default true\n\t\t */\n\t\tthis.screenSpacePanning = true;\n\n\t\t/**\n\t\t * How fast to pan the camera when the keyboard is used in\n\t\t * pixels per keypress.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 7\n\t\t */\n\t\tthis.keyPanSpeed = 7.0;\n\n\t\t/**\n\t\t * Setting this property to `true` allows to zoom to the cursor's position.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.zoomToCursor = false;\n\n\t\t/**\n\t\t * Set to true to automatically rotate around the target\n\t\t *\n\t\t * Note that if this is enabled, you must call `update()` in your animation loop.\n\t\t * If you want the auto-rotate speed to be independent of the frame rate (the refresh\n\t\t * rate of the display), you must pass the time `deltaTime`, in seconds, to `update()`.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.autoRotate = false;\n\t\t/**\n\t\t * If set higher than 0, the auto-rotate will stop slowing down when hitting this threshold.\n\t\t *\n\t\t * Note that if this is enabled, you must call `update()` in your animation loop.\n\t\t * If you want the auto-rotate speed to be independent of the frame rate (the refresh\n\t\t * rate of the display), you must pass the time `deltaTime`, in seconds, to `update()`.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.autoRotateThreshold = 0.0;\n\n\t\t/**\n\t\t * If set higher than 0, the auto-rotate will stop slowing down when hitting this threshold.\n\t\t *\n\t\t * Note that if this is enabled, you must call `update()` in your animation loop.\n\t\t * If you want the auto-rotate speed to be independent of the frame rate (the refresh\n\t\t * rate of the display), you must pass the time `deltaTime`, in seconds, to `update()`.\n\t\t *\n\t\t * @type {boolean}\n\t\t * @default false\n\t\t */\n\t\tthis.autoRotateThresholdTrigger = 2.0;\n\n\t\t/**\n\t\t * How fast to rotate around the target if `autoRotate` is `true`. The default  equates to 30 seconds\n\t\t * per orbit at 60fps.\n\t\t *\n\t\t * Note that if `autoRotate` is enabled, you must call `update()` in your animation loop.\n\t\t *\n\t\t * @type {number}\n\t\t * @default 2\n\t\t */\n\t\tthis.autoRotateSpeed = 2.0;\n\n\t\t/**\n\t\t * This object contains references to the keycodes for controlling camera panning.\n\t\t *\n\t\t * ```js\n\t\t * controls.keys = {\n\t\t * \tLEFT: 'ArrowLeft', //left arrow\n\t\t * \tUP: 'ArrowUp', // up arrow\n\t\t * \tRIGHT: 'ArrowRight', // right arrow\n\t\t * \tBOTTOM: 'ArrowDown' // down arrow\n\t\t * }\n\t\t * ```\n\t\t * @type {Object}\n\t\t */\n\t\tthis.keys = { LEFT: 'ArrowLeft', UP: 'ArrowUp', RIGHT: 'ArrowRight', BOTTOM: 'ArrowDown' };\n\n\t\t/**\n\t\t * This object contains references to the mouse actions used by the controls.\n\t\t *\n\t\t * ```js\n\t\t * controls.mouseButtons = {\n\t\t * \tLEFT: THREE.MOUSE.ROTATE,\n\t\t * \tMIDDLE: THREE.MOUSE.DOLLY,\n\t\t * \tRIGHT: THREE.MOUSE.PAN\n\t\t * }\n\t\t * ```\n\t\t * @type {Object}\n\t\t */\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t/**\n\t\t * This object contains references to the touch actions used by the controls.\n\t\t *\n\t\t * ```js\n\t\t * controls.mouseButtons = {\n\t\t * \tONE: THREE.TOUCH.ROTATE,\n\t\t * \tTWO: THREE.TOUCH.DOLLY_PAN\n\t\t * }\n\t\t * ```\n\t\t * @type {Object}\n\t\t */\n\t\tthis.touches = { ONE: TOUCH.ROTATE, TWO: TOUCH.DOLLY_PAN };\n\n\t\t/**\n\t\t * Used internally by `saveState()` and `reset()`.\n\t\t *\n\t\t * @type {Vector3}\n\t\t */\n\t\tthis.target0 = this.target.clone();\n\n\t\t/**\n\t\t * Used internally by `saveState()` and `reset()`.\n\t\t *\n\t\t * @type {Vector3}\n\t\t */\n\t\tthis.position0 = this.object.position.clone();\n\n\t\t/**\n\t\t * Used internally by `saveState()` and `reset()`.\n\t\t *\n\t\t * @type {number}\n\t\t */\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// the target DOM element for key events\n\t\tthis._domElementKeyEvents = null;\n\n\t\t// internals\n\n\t\tthis._lastPosition = new Vector3();\n\t\tthis._lastQuaternion = new Quaternion();\n\t\tthis._lastTargetPosition = new Vector3();\n\n\t\t// so camera.up is the orbit axis\n\t\tthis._quat = new Quaternion().setFromUnitVectors( object.up, new Vector3( 0, 1, 0 ) );\n\t\tthis._quatInverse = this._quat.clone().invert();\n\n\t\t// current position in spherical coordinates\n\t\tthis._spherical = new Spherical();\n\t\tthis._sphericalDelta = new Spherical();\n\n\t\tthis._scale = 1;\n\t\tthis._panOffset = new Vector3();\n\n\t\tthis._rotateStart = new Vector2();\n\t\tthis._rotateEnd = new Vector2();\n\t\tthis._rotateDelta = new Vector2();\n\n\t\tthis._panStart = new Vector2();\n\t\tthis._panEnd = new Vector2();\n\t\tthis._panDelta = new Vector2();\n\n\t\tthis._dollyStart = new Vector2();\n\t\tthis._dollyEnd = new Vector2();\n\t\tthis._dollyDelta = new Vector2();\n\n\t\tthis._dollyDirection = new Vector3();\n\t\tthis._mouse = new Vector2();\n\t\tthis._performCursorZoom = false;\n\n\t\tthis._pointers = [];\n\t\tthis._pointerPositions = {};\n\n\t\tthis._controlActive = false;\n\n\t\t// event listeners\n\n\t\tthis._onPointerMove = onPointerMove.bind( this );\n\t\tthis._onPointerDown = onPointerDown.bind( this );\n\t\tthis._onPointerUp = onPointerUp.bind( this );\n\t\tthis._onContextMenu = onContextMenu.bind( this );\n\t\tthis._onMouseWheel = onMouseWheel.bind( this );\n\t\tthis._onKeyDown = onKeyDown.bind( this );\n\n\t\tthis._onTouchStart = onTouchStart.bind( this );\n\t\tthis._onTouchMove = onTouchMove.bind( this );\n\n\t\tthis._onMouseDown = onMouseDown.bind( this );\n\t\tthis._onMouseMove = onMouseMove.bind( this );\n\n\t\tthis._interceptControlDown = interceptControlDown.bind( this );\n\t\tthis._interceptControlUp = interceptControlUp.bind( this );\n\n\t\t//\n\n\t\tif ( this.domElement !== null ) {\n\n\t\t\tthis.connect();\n\n\t\t}\n\n\t\tthis.update();\n\n\t}\n\n\tconnect() {\n\n\t\tthis.domElement.addEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.addEventListener( 'pointercancel', this._onPointerUp );\n\n\t\tthis.domElement.addEventListener( 'contextmenu', this._onContextMenu );\n\t\tthis.domElement.addEventListener( 'wheel', this._onMouseWheel, { passive: false } );\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\t\tdocument.addEventListener( 'keydown', this._interceptControlDown, { passive: true, capture: true } );\n\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t}\n\n\tdisconnect() {\n\n\t\tthis.domElement.removeEventListener( 'pointerdown', this._onPointerDown );\n\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\t\tthis.domElement.removeEventListener( 'pointerup', this._onPointerUp );\n\t\tthis.domElement.removeEventListener( 'pointercancel', this._onPointerUp );\n\n\t\tthis.domElement.removeEventListener( 'wheel', this._onMouseWheel );\n\t\tthis.domElement.removeEventListener( 'contextmenu', this._onContextMenu );\n\n\t\tthis.stopListenToKeyEvents();\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\t\tdocument.removeEventListener( 'keydown', this._interceptControlDown, { capture: true } );\n\n\t\tthis.domElement.style.touchAction = 'auto';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.disconnect();\n\n\t}\n\n\t/**\n\t * Get the current vertical rotation, in radians.\n\t *\n\t * @return {number} The current vertical rotation, in radians.\n\t */\n\tgetPolarAngle() {\n\n\t\treturn this._spherical.phi;\n\n\t}\n\n\t/**\n\t * Get the current horizontal rotation, in radians.\n\t *\n\t * @return {number} The current horizontal rotation, in radians.\n\t */\n\tgetAzimuthalAngle() {\n\n\t\treturn this._spherical.theta;\n\n\t}\n\n\t/**\n\t * Returns the distance from the camera to the target.\n\t *\n\t * @return {number} The distance from the camera to the target.\n\t */\n\tgetDistance() {\n\n\t\treturn this.object.position.distanceTo( this.target );\n\n\t}\n\n\t/**\n\t * Adds key event listeners to the given DOM element.\n\t * `window` is a recommended argument for using this method.\n\t *\n\t * @param {HTMLDOMElement} domElement - The DOM element\n\t */\n\tlistenToKeyEvents( domElement ) {\n\n\t\tdomElement.addEventListener( 'keydown', this._onKeyDown );\n\t\tthis._domElementKeyEvents = domElement;\n\n\t}\n\n\t/**\n\t * Removes the key event listener previously defined with `listenToKeyEvents()`.\n\t */\n\tstopListenToKeyEvents() {\n\n\t\tif ( this._domElementKeyEvents !== null ) {\n\n\t\t\tthis._domElementKeyEvents.removeEventListener( 'keydown', this._onKeyDown );\n\t\t\tthis._domElementKeyEvents = null;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Save the current state of the controls. This can later be recovered with `reset()`.\n\t */\n\tsaveState() {\n\n\t\tthis.target0.copy( this.target );\n\t\tthis.position0.copy( this.object.position );\n\t\tthis.zoom0 = this.object.zoom;\n\n\t}\n\n\t/**\n\t * Reset the controls to their state from either the last time the `saveState()`\n\t * was called, or the initial state.\n\t */\n\treset() {\n\n\t\tthis.target.copy( this.target0 );\n\t\tthis.object.position.copy( this.position0 );\n\t\tthis.object.zoom = this.zoom0;\n\n\t\tthis.object.updateProjectionMatrix();\n\t\tthis.dispatchEvent( _changeEvent );\n\n\t\tthis.update();\n\n\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tupdate( deltaTime = null ) {\n\n\t\tconst position = this.object.position;\n\n\t\t_v.copy( position ).sub( this.target );\n\n\t\t// rotate offset to \"y-axis-is-up\" space\n\t\t_v.applyQuaternion( this._quat );\n\n\t\t// angle from z-axis around y-axis\n\t\tthis._spherical.setFromVector3( _v );\n\n\t\tif ( this.autoRotate && this.state === _STATE.NONE ) {\n\n\t\t\tthis._rotateLeft( this._getAutoRotationAngle( deltaTime ) );\n\n\t\t}\n\n\t\tif ( this.enableDamping ) {\n\n\t\t\tthis._spherical.theta += this._sphericalDelta.theta * this.dampingFactor;\n\t\t\tthis._spherical.phi += this._sphericalDelta.phi * this.dampingFactor;\n\n\t\t} else {\n\n\t\t\tthis._spherical.theta += this._sphericalDelta.theta;\n\t\t\tthis._spherical.phi += this._sphericalDelta.phi;\n\n\t\t}\n\n\t\t// restrict theta to be between desired limits\n\n\t\tlet min = this.minAzimuthAngle;\n\t\tlet max = this.maxAzimuthAngle;\n\n\t\tif ( isFinite( min ) && isFinite( max ) ) {\n\n\t\t\tif ( min < - Math.PI ) min += _twoPI; else if ( min > Math.PI ) min -= _twoPI;\n\n\t\t\tif ( max < - Math.PI ) max += _twoPI; else if ( max > Math.PI ) max -= _twoPI;\n\n\t\t\tif ( min <= max ) {\n\n\t\t\t\tthis._spherical.theta = Math.max( min, Math.min( max, this._spherical.theta ) );\n\n\t\t\t} else {\n\n\t\t\t\tthis._spherical.theta = ( this._spherical.theta > ( min + max ) / 2 ) ?\n\t\t\t\t\tMath.max( min, this._spherical.theta ) :\n\t\t\t\t\tMath.min( max, this._spherical.theta );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restrict phi to be between desired limits\n\t\tthis._spherical.phi = Math.max( this.minPolarAngle, Math.min( this.maxPolarAngle, this._spherical.phi ) );\n\n\t\tthis._spherical.makeSafe();\n\n\n\t\t// move target to panned location\n\n\t\tif ( this.enableDamping === true ) {\n\n\t\t\tthis.target.addScaledVector( this._panOffset, this.dampingFactor );\n\n\t\t} else {\n\n\t\t\tthis.target.add( this._panOffset );\n\n\t\t}\n\n\t\t// Limit the target distance from the cursor to create a sphere around the center of interest\n\t\tthis.target.sub( this.cursor );\n\t\tthis.target.clampLength( this.minTargetRadius, this.maxTargetRadius );\n\t\tthis.target.add( this.cursor );\n\n\t\tlet zoomChanged = false;\n\t\t// adjust the camera position based on zoom only if we're not zooming to the cursor or if it's an ortho camera\n\t\t// we adjust zoom later in these cases\n\t\tif ( this.zoomToCursor && this._performCursorZoom || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._spherical.radius = this._clampDistance( this._spherical.radius );\n\n\t\t} else {\n\n\t\t\tconst prevRadius = this._spherical.radius;\n\t\t\tthis._spherical.radius = this._clampDistance( this._spherical.radius * this._scale );\n\t\t\tzoomChanged = prevRadius != this._spherical.radius;\n\n\t\t}\n\n\t\t_v.setFromSpherical( this._spherical );\n\n\t\t// rotate offset back to \"camera-up-vector-is-up\" space\n\t\t_v.applyQuaternion( this._quatInverse );\n\n\t\tposition.copy( this.target ).add( _v );\n\n\t\tthis.object.lookAt( this.target );\n\n\t\tif ( this.enableDamping === true ) {\n\n            if (Math.abs(this._sphericalDelta.theta) > this.autoRotateThresholdTrigger){\n\n                this.autoRotateThresholdTriggered = true\n\n            }\n            if (Math.abs(this._sphericalDelta.theta) < this.autoRotateThreshold-0.01){\n\n                this.autoRotateThresholdTriggered = false\n\n            }\n            if (!this.autoRotateThresholdTriggered || Math.abs(this._sphericalDelta.theta) > this.autoRotateThreshold) {\n\n                this._sphericalDelta.theta *= ( 1 - this.dampingFactor );\n                \n            }\n            this._sphericalDelta.phi *= ( 1 - this.dampingFactor );\n\n            this._panOffset.multiplyScalar( 1 - this.dampingFactor );\n\n\t\t} else {\n\n\t\t\tthis._sphericalDelta.set( 0, 0, 0 );\n\n\t\t\tthis._panOffset.set( 0, 0, 0 );\n\n\t\t}\n\n\t\t// adjust camera position\n\t\tif ( this.zoomToCursor && this._performCursorZoom ) {\n\n\t\t\tlet newRadius = null;\n\t\t\tif ( this.object.isPerspectiveCamera ) {\n\n\t\t\t\t// move the camera down the pointer ray\n\t\t\t\t// this method avoids floating point error\n\t\t\t\tconst prevRadius = _v.length();\n\t\t\t\tnewRadius = this._clampDistance( prevRadius * this._scale );\n\n\t\t\t\tconst radiusDelta = prevRadius - newRadius;\n\t\t\t\tthis.object.position.addScaledVector( this._dollyDirection, radiusDelta );\n\t\t\t\tthis.object.updateMatrixWorld();\n\n\t\t\t\tzoomChanged = !! radiusDelta;\n\n\t\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\t\t// adjust the ortho camera position based on zoom changes\n\t\t\t\tconst mouseBefore = new Vector3( this._mouse.x, this._mouse.y, 0 );\n\t\t\t\tmouseBefore.unproject( this.object );\n\n\t\t\t\tconst prevZoom = this.object.zoom;\n\t\t\t\tthis.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / this._scale ) );\n\t\t\t\tthis.object.updateProjectionMatrix();\n\n\t\t\t\tzoomChanged = prevZoom !== this.object.zoom;\n\n\t\t\t\tconst mouseAfter = new Vector3( this._mouse.x, this._mouse.y, 0 );\n\t\t\t\tmouseAfter.unproject( this.object );\n\n\t\t\t\tthis.object.position.sub( mouseAfter ).add( mouseBefore );\n\t\t\t\tthis.object.updateMatrixWorld();\n\n\t\t\t\tnewRadius = _v.length();\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled.' );\n\t\t\t\tthis.zoomToCursor = false;\n\n\t\t\t}\n\n\t\t\t// handle the placement of the target\n\t\t\tif ( newRadius !== null ) {\n\n\t\t\t\tif ( this.screenSpacePanning ) {\n\n\t\t\t\t\t// position the orbit target in front of the new camera position\n\t\t\t\t\tthis.target.set( 0, 0, - 1 )\n\t\t\t\t\t\t.transformDirection( this.object.matrix )\n\t\t\t\t\t\t.multiplyScalar( newRadius )\n\t\t\t\t\t\t.add( this.object.position );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// get the ray and translation plane to compute target\n\t\t\t\t\t_ray.origin.copy( this.object.position );\n\t\t\t\t\t_ray.direction.set( 0, 0, - 1 ).transformDirection( this.object.matrix );\n\n\t\t\t\t\t// if the camera is 20 degrees above the horizon then don't adjust the focus target to avoid\n\t\t\t\t\t// extremely large values\n\t\t\t\t\tif ( Math.abs( this.object.up.dot( _ray.direction ) ) < _TILT_LIMIT ) {\n\n\t\t\t\t\t\tthis.object.lookAt( this.target );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_plane.setFromNormalAndCoplanarPoint( this.object.up, this.target );\n\t\t\t\t\t\t_ray.intersectPlane( _plane, this.target );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\tconst prevZoom = this.object.zoom;\n\t\t\tthis.object.zoom = Math.max( this.minZoom, Math.min( this.maxZoom, this.object.zoom / this._scale ) );\n\n\t\t\tif ( prevZoom !== this.object.zoom ) {\n\n\t\t\t\tthis.object.updateProjectionMatrix();\n\t\t\t\tzoomChanged = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._scale = 1;\n\t\tthis._performCursorZoom = false;\n\n\t\t// update condition is:\n\t\t// min(camera displacement, camera rotation in radians)^2 > EPS\n\t\t// using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n\t\tif ( zoomChanged ||\n\t\t\tthis._lastPosition.distanceToSquared( this.object.position ) > _EPS ||\n\t\t\t8 * ( 1 - this._lastQuaternion.dot( this.object.quaternion ) ) > _EPS ||\n\t\t\tthis._lastTargetPosition.distanceToSquared( this.target ) > _EPS ) {\n\n\t\t\tthis.dispatchEvent( _changeEvent );\n\n\t\t\tthis._lastPosition.copy( this.object.position );\n\t\t\tthis._lastQuaternion.copy( this.object.quaternion );\n\t\t\tthis._lastTargetPosition.copy( this.target );\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t_getAutoRotationAngle( deltaTime ) {\n\n\t\tif ( deltaTime !== null ) {\n\n\t\t\treturn ( _twoPI / 60 * this.autoRotateSpeed ) * deltaTime;\n\n\t\t} else {\n\n\t\t\treturn _twoPI / 60 / 60 * this.autoRotateSpeed;\n\n\t\t}\n\n\t}\n\n\t_getZoomScale( delta ) {\n\n\t\tconst normalizedDelta = Math.abs( delta * 0.01 );\n\t\treturn Math.pow( 0.95, this.zoomSpeed * normalizedDelta );\n\n\t}\n\n\t_rotateLeft( angle ) {\n\n\t\tthis._sphericalDelta.theta -= angle;\n\n\t}\n\n\t_rotateUp( angle ) {\n\n\t\tthis._sphericalDelta.phi -= angle;\n\n\t}\n\n\t_panLeft( distance, objectMatrix ) {\n\n\t\t_v.setFromMatrixColumn( objectMatrix, 0 ); // get X column of objectMatrix\n\t\t_v.multiplyScalar( - distance );\n\n\t\tthis._panOffset.add( _v );\n\n\t}\n\n\t_panUp( distance, objectMatrix ) {\n\n\t\tif ( this.screenSpacePanning === true ) {\n\n\t\t\t_v.setFromMatrixColumn( objectMatrix, 1 );\n\n\t\t} else {\n\n\t\t\t_v.setFromMatrixColumn( objectMatrix, 0 );\n\t\t\t_v.crossVectors( this.object.up, _v );\n\n\t\t}\n\n\t\t_v.multiplyScalar( distance );\n\n\t\tthis._panOffset.add( _v );\n\n\t}\n\n\t// deltaX and deltaY are in pixels; right and down are positive\n\t_pan( deltaX, deltaY ) {\n\n\t\tconst element = this.domElement;\n\n\t\tif ( this.object.isPerspectiveCamera ) {\n\n\t\t\t// perspective\n\t\t\tconst position = this.object.position;\n\t\t\t_v.copy( position ).sub( this.target );\n\t\t\tlet targetDistance = _v.length();\n\n\t\t\t// half of the fov is center to top of screen\n\t\t\ttargetDistance *= Math.tan( ( this.object.fov / 2 ) * Math.PI / 180.0 );\n\n\t\t\t// we use only clientHeight here so aspect ratio does not distort speed\n\t\t\tthis._panLeft( 2 * deltaX * targetDistance / element.clientHeight, this.object.matrix );\n\t\t\tthis._panUp( 2 * deltaY * targetDistance / element.clientHeight, this.object.matrix );\n\n\t\t} else if ( this.object.isOrthographicCamera ) {\n\n\t\t\t// orthographic\n\t\t\tthis._panLeft( deltaX * ( this.object.right - this.object.left ) / this.object.zoom / element.clientWidth, this.object.matrix );\n\t\t\tthis._panUp( deltaY * ( this.object.top - this.object.bottom ) / this.object.zoom / element.clientHeight, this.object.matrix );\n\n\t\t} else {\n\n\t\t\t// camera neither orthographic nor perspective\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\t\t\tthis.enablePan = false;\n\n\t\t}\n\n\t}\n\n\t_dollyOut( dollyScale ) {\n\n\t\tif ( this.object.isPerspectiveCamera || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._scale /= dollyScale;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tthis.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t_dollyIn( dollyScale ) {\n\n\t\tif ( this.object.isPerspectiveCamera || this.object.isOrthographicCamera ) {\n\n\t\t\tthis._scale *= dollyScale;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.' );\n\t\t\tthis.enableZoom = false;\n\n\t\t}\n\n\t}\n\n\t_updateZoomParameters( x, y ) {\n\n\t\tif ( ! this.zoomToCursor ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._performCursorZoom = true;\n\n\t\tconst rect = this.domElement.getBoundingClientRect();\n\t\tconst dx = x - rect.left;\n\t\tconst dy = y - rect.top;\n\t\tconst w = rect.width;\n\t\tconst h = rect.height;\n\n\t\tthis._mouse.x = ( dx / w ) * 2 - 1;\n\t\tthis._mouse.y = - ( dy / h ) * 2 + 1;\n\n\t\tthis._dollyDirection.set( this._mouse.x, this._mouse.y, 1 ).unproject( this.object ).sub( this.object.position ).normalize();\n\n\t}\n\n\t_clampDistance( dist ) {\n\n\t\treturn Math.max( this.minDistance, Math.min( this.maxDistance, dist ) );\n\n\t}\n\n\t//\n\t// event callbacks - update the object state\n\t//\n\n\t_handleMouseDownRotate( event ) {\n\n\t\tthis._rotateStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseDownDolly( event ) {\n\n\t\tthis._updateZoomParameters( event.clientX, event.clientX );\n\t\tthis._dollyStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseDownPan( event ) {\n\n\t\tthis._panStart.set( event.clientX, event.clientY );\n\n\t}\n\n\t_handleMouseMoveRotate( event ) {\n\n\t\tthis._rotateEnd.set( event.clientX, event.clientY );\n\n\t\tthis._rotateDelta.subVectors( this._rotateEnd, this._rotateStart ).multiplyScalar( this.rotateSpeed );\n\n\t\tconst element = this.domElement;\n\n\t\tthis._rotateLeft( _twoPI * this._rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\tthis._rotateUp( _twoPI * this._rotateDelta.y / element.clientHeight );\n\n\t\tthis._rotateStart.copy( this._rotateEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseMoveDolly( event ) {\n\n\t\tthis._dollyEnd.set( event.clientX, event.clientY );\n\n\t\tthis._dollyDelta.subVectors( this._dollyEnd, this._dollyStart );\n\n\t\tif ( this._dollyDelta.y > 0 ) {\n\n\t\t\tthis._dollyOut( this._getZoomScale( this._dollyDelta.y ) );\n\n\t\t} else if ( this._dollyDelta.y < 0 ) {\n\n\t\t\tthis._dollyIn( this._getZoomScale( this._dollyDelta.y ) );\n\n\t\t}\n\n\t\tthis._dollyStart.copy( this._dollyEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseMovePan( event ) {\n\n\t\tthis._panEnd.set( event.clientX, event.clientY );\n\n\t\tthis._panDelta.subVectors( this._panEnd, this._panStart ).multiplyScalar( this.panSpeed );\n\n\t\tthis._pan( this._panDelta.x, this._panDelta.y );\n\n\t\tthis._panStart.copy( this._panEnd );\n\n\t\tthis.update();\n\n\t}\n\n\t_handleMouseWheel( event ) {\n\n\t\tthis._updateZoomParameters( event.clientX, event.clientY );\n\n\t\tif ( event.deltaY < 0 ) {\n\n\t\t\tthis._dollyIn( this._getZoomScale( event.deltaY ) );\n\n\t\t} else if ( event.deltaY > 0 ) {\n\n\t\t\tthis._dollyOut( this._getZoomScale( event.deltaY ) );\n\n\t\t}\n\n\t\tthis.update();\n\n\t}\n\n\t_handleKeyDown( event ) {\n\n\t\tlet needsUpdate = false;\n\n\t\tswitch ( event.code ) {\n\n\t\t\tcase this.keys.UP:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateUp( _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( 0, this.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.BOTTOM:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateUp( - _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( 0, - this.keyPanSpeed );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.LEFT:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateLeft( _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( this.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t\tcase this.keys.RIGHT:\n\n\t\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\t\tif ( this.enableRotate ) {\n\n\t\t\t\t\t\tthis._rotateLeft( - _twoPI * this.keyRotateSpeed / this.domElement.clientHeight );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( this.enablePan ) {\n\n\t\t\t\t\t\tthis._pan( - this.keyPanSpeed, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tneedsUpdate = true;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\t// prevent the browser from scrolling on cursor keys\n\t\t\tevent.preventDefault();\n\n\t\t\tthis.update();\n\n\t\t}\n\n\n\t}\n\n\t_handleTouchStartRotate( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._rotateStart.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._rotateStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\t_handleTouchStartPan( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._panStart.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._panStart.set( x, y );\n\n\t\t}\n\n\t}\n\n\t_handleTouchStartDolly( event ) {\n\n\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\tconst dx = event.pageX - position.x;\n\t\tconst dy = event.pageY - position.y;\n\n\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tthis._dollyStart.set( 0, distance );\n\n\t}\n\n\t_handleTouchStartDollyPan( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchStartDolly( event );\n\n\t\tif ( this.enablePan ) this._handleTouchStartPan( event );\n\n\t}\n\n\t_handleTouchStartDollyRotate( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchStartDolly( event );\n\n\t\tif ( this.enableRotate ) this._handleTouchStartRotate( event );\n\n\t}\n\n\t_handleTouchMoveRotate( event ) {\n\n\t\tif ( this._pointers.length == 1 ) {\n\n\t\t\tthis._rotateEnd.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._rotateEnd.set( x, y );\n\n\t\t}\n\n\t\tthis._rotateDelta.subVectors( this._rotateEnd, this._rotateStart ).multiplyScalar( this.rotateSpeed );\n\n\t\tconst element = this.domElement;\n\n\t\tthis._rotateLeft( _twoPI * this._rotateDelta.x / element.clientHeight ); // yes, height\n\n\t\tthis._rotateUp( _twoPI * this._rotateDelta.y / element.clientHeight );\n\n\t\tthis._rotateStart.copy( this._rotateEnd );\n\n\t}\n\n\t_handleTouchMovePan( event ) {\n\n\t\tif ( this._pointers.length === 1 ) {\n\n\t\t\tthis._panEnd.set( event.pageX, event.pageY );\n\n\t\t} else {\n\n\t\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\t\tconst x = 0.5 * ( event.pageX + position.x );\n\t\t\tconst y = 0.5 * ( event.pageY + position.y );\n\n\t\t\tthis._panEnd.set( x, y );\n\n\t\t}\n\n\t\tthis._panDelta.subVectors( this._panEnd, this._panStart ).multiplyScalar( this.panSpeed );\n\n\t\tthis._pan( this._panDelta.x, this._panDelta.y );\n\n\t\tthis._panStart.copy( this._panEnd );\n\n\t}\n\n\t_handleTouchMoveDolly( event ) {\n\n\t\tconst position = this._getSecondPointerPosition( event );\n\n\t\tconst dx = event.pageX - position.x;\n\t\tconst dy = event.pageY - position.y;\n\n\t\tconst distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\tthis._dollyEnd.set( 0, distance );\n\n\t\tthis._dollyDelta.set( 0, Math.pow( this._dollyEnd.y / this._dollyStart.y, this.zoomSpeed ) );\n\n\t\tthis._dollyOut( this._dollyDelta.y );\n\n\t\tthis._dollyStart.copy( this._dollyEnd );\n\n\t\tconst centerX = ( event.pageX + position.x ) * 0.5;\n\t\tconst centerY = ( event.pageY + position.y ) * 0.5;\n\n\t\tthis._updateZoomParameters( centerX, centerY );\n\n\t}\n\n\t_handleTouchMoveDollyPan( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchMoveDolly( event );\n\n\t\tif ( this.enablePan ) this._handleTouchMovePan( event );\n\n\t}\n\n\t_handleTouchMoveDollyRotate( event ) {\n\n\t\tif ( this.enableZoom ) this._handleTouchMoveDolly( event );\n\n\t\tif ( this.enableRotate ) this._handleTouchMoveRotate( event );\n\n\t}\n\n\t// pointers\n\n\t_addPointer( event ) {\n\n\t\tthis._pointers.push( event.pointerId );\n\n\t}\n\n\t_removePointer( event ) {\n\n\t\tdelete this._pointerPositions[ event.pointerId ];\n\n\t\tfor ( let i = 0; i < this._pointers.length; i ++ ) {\n\n\t\t\tif ( this._pointers[ i ] == event.pointerId ) {\n\n\t\t\t\tthis._pointers.splice( i, 1 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_isTrackingPointer( event ) {\n\n\t\tfor ( let i = 0; i < this._pointers.length; i ++ ) {\n\n\t\t\tif ( this._pointers[ i ] == event.pointerId ) return true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\t_trackPointer( event ) {\n\n\t\tlet position = this._pointerPositions[ event.pointerId ];\n\n\t\tif ( position === undefined ) {\n\n\t\t\tposition = new Vector2();\n\t\t\tthis._pointerPositions[ event.pointerId ] = position;\n\n\t\t}\n\n\t\tposition.set( event.pageX, event.pageY );\n\n\t}\n\n\t_getSecondPointerPosition( event ) {\n\n\t\tconst pointerId = ( event.pointerId === this._pointers[ 0 ] ) ? this._pointers[ 1 ] : this._pointers[ 0 ];\n\n\t\treturn this._pointerPositions[ pointerId ];\n\n\t}\n\n\t//\n\n\t_customWheelEvent( event ) {\n\n\t\tconst mode = event.deltaMode;\n\n\t\t// minimal wheel event altered to meet delta-zoom demand\n\t\tconst newEvent = {\n\t\t\tclientX: event.clientX,\n\t\t\tclientY: event.clientY,\n\t\t\tdeltaY: event.deltaY,\n\t\t};\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase 1: // LINE_MODE\n\t\t\t\tnewEvent.deltaY *= 16;\n\t\t\t\tbreak;\n\n\t\t\tcase 2: // PAGE_MODE\n\t\t\t\tnewEvent.deltaY *= 100;\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\t// detect if event was triggered by pinching\n\t\tif ( event.ctrlKey && ! this._controlActive ) {\n\n\t\t\tnewEvent.deltaY *= 10;\n\n\t\t}\n\n\t\treturn newEvent;\n\n\t}\n\n}\n\nfunction onPointerDown( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tif ( this._pointers.length === 0 ) {\n\n\t\tthis.domElement.setPointerCapture( event.pointerId );\n\n\t\tthis.domElement.addEventListener( 'pointermove', this._onPointerMove );\n\t\tthis.domElement.addEventListener( 'pointerup', this._onPointerUp );\n\n\t}\n\n\t//\n\n\tif ( this._isTrackingPointer( event ) ) return;\n\n\t//\n\n\tthis._addPointer( event );\n\n\tif ( event.pointerType === 'touch' ) {\n\n\t\tthis._onTouchStart( event );\n\n\t} else {\n\n\t\tthis._onMouseDown( event );\n\n\t}\n\n}\n\nfunction onPointerMove( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tif ( event.pointerType === 'touch' ) {\n\n\t\tthis._onTouchMove( event );\n\n\t} else {\n\n\t\tthis._onMouseMove( event );\n\n\t}\n\n}\n\nfunction onPointerUp( event ) {\n\n\tthis._removePointer( event );\n\n\tswitch ( this._pointers.length ) {\n\n\t\tcase 0:\n\n\t\t\tthis.domElement.releasePointerCapture( event.pointerId );\n\n\t\t\tthis.domElement.removeEventListener( 'pointermove', this._onPointerMove );\n\t\t\tthis.domElement.removeEventListener( 'pointerup', this._onPointerUp );\n\n\t\t\tthis.dispatchEvent( _endEvent );\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t\t\tbreak;\n\n\t\tcase 1:\n\n\t\t\tconst pointerId = this._pointers[ 0 ];\n\t\t\tconst position = this._pointerPositions[ pointerId ];\n\n\t\t\t// minimal placeholder event - allows state correction on pointer-up\n\t\t\tthis._onTouchStart( { pointerId: pointerId, pageX: position.x, pageY: position.y } );\n\n\t\t\tbreak;\n\n\t}\n\n}\n\nfunction onMouseDown( event ) {\n\n\tlet mouseAction;\n\n\tswitch ( event.button ) {\n\n\t\tcase 0:\n\n\t\t\tmouseAction = this.mouseButtons.LEFT;\n\t\t\tbreak;\n\n\t\tcase 1:\n\n\t\t\tmouseAction = this.mouseButtons.MIDDLE;\n\t\t\tbreak;\n\n\t\tcase 2:\n\n\t\t\tmouseAction = this.mouseButtons.RIGHT;\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tmouseAction = - 1;\n\n\t}\n\n\tswitch ( mouseAction ) {\n\n\t\tcase MOUSE.DOLLY:\n\n\t\t\tif ( this.enableZoom === false ) return;\n\n\t\t\tthis._handleMouseDownDolly( event );\n\n\t\t\tthis.state = _STATE.DOLLY;\n\n\t\t\tbreak;\n\n\t\tcase MOUSE.ROTATE:\n\n\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\tthis._handleMouseDownPan( event );\n\n\t\t\t\tthis.state = _STATE.PAN;\n\n\t\t\t} else {\n\n\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\tthis._handleMouseDownRotate( event );\n\n\t\t\t\tthis.state = _STATE.ROTATE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase MOUSE.PAN:\n\n\t\t\tif ( event.ctrlKey || event.metaKey || event.shiftKey ) {\n\n\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\tthis._handleMouseDownRotate( event );\n\n\t\t\t\tthis.state = _STATE.ROTATE;\n\n\t\t\t} else {\n\n\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\tthis._handleMouseDownPan( event );\n\n\t\t\t\tthis.state = _STATE.PAN;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tif ( this.state !== _STATE.NONE ) {\n\n\t\tthis.dispatchEvent( _startEvent );\n\n\t}\n\n}\n\nfunction onMouseMove( event ) {\n\n\tswitch ( this.state ) {\n\n\t\tcase _STATE.ROTATE:\n\n\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\tthis._handleMouseMoveRotate( event );\n\n\t\t\tbreak;\n\n\t\tcase _STATE.DOLLY:\n\n\t\t\tif ( this.enableZoom === false ) return;\n\n\t\t\tthis._handleMouseMoveDolly( event );\n\n\t\t\tbreak;\n\n\t\tcase _STATE.PAN:\n\n\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\tthis._handleMouseMovePan( event );\n\n\t\t\tbreak;\n\n\t}\n\n}\n\nfunction onMouseWheel( event ) {\n\n\tif ( this.enabled === false || this.enableZoom === false || this.state !== _STATE.NONE ) return;\n\n\tevent.preventDefault();\n\n\tthis.dispatchEvent( _startEvent );\n\n\tthis._handleMouseWheel( this._customWheelEvent( event ) );\n\n\tthis.dispatchEvent( _endEvent );\n\n}\n\nfunction onKeyDown( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tthis._handleKeyDown( event );\n\n}\n\nfunction onTouchStart( event ) {\n\n\tthis._trackPointer( event );\n\n\tswitch ( this._pointers.length ) {\n\n\t\tcase 1:\n\n\t\t\tswitch ( this.touches.ONE ) {\n\n\t\t\t\tcase TOUCH.ROTATE:\n\n\t\t\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartRotate( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_ROTATE;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TOUCH.PAN:\n\n\t\t\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartPan( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_PAN;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tthis.state = _STATE.NONE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tcase 2:\n\n\t\t\tswitch ( this.touches.TWO ) {\n\n\t\t\t\tcase TOUCH.DOLLY_PAN:\n\n\t\t\t\t\tif ( this.enableZoom === false && this.enablePan === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartDollyPan( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_DOLLY_PAN;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase TOUCH.DOLLY_ROTATE:\n\n\t\t\t\t\tif ( this.enableZoom === false && this.enableRotate === false ) return;\n\n\t\t\t\t\tthis._handleTouchStartDollyRotate( event );\n\n\t\t\t\t\tthis.state = _STATE.TOUCH_DOLLY_ROTATE;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tthis.state = _STATE.NONE;\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n\tif ( this.state !== _STATE.NONE ) {\n\n\t\tthis.dispatchEvent( _startEvent );\n\n\t}\n\n}\n\nfunction onTouchMove( event ) {\n\n\tthis._trackPointer( event );\n\n\tswitch ( this.state ) {\n\n\t\tcase _STATE.TOUCH_ROTATE:\n\n\t\t\tif ( this.enableRotate === false ) return;\n\n\t\t\tthis._handleTouchMoveRotate( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_PAN:\n\n\t\t\tif ( this.enablePan === false ) return;\n\n\t\t\tthis._handleTouchMovePan( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_DOLLY_PAN:\n\n\t\t\tif ( this.enableZoom === false && this.enablePan === false ) return;\n\n\t\t\tthis._handleTouchMoveDollyPan( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tcase _STATE.TOUCH_DOLLY_ROTATE:\n\n\t\t\tif ( this.enableZoom === false && this.enableRotate === false ) return;\n\n\t\t\tthis._handleTouchMoveDollyRotate( event );\n\n\t\t\tthis.update();\n\n\t\t\tbreak;\n\n\t\tdefault:\n\n\t\t\tthis.state = _STATE.NONE;\n\n\t}\n\n}\n\nfunction onContextMenu( event ) {\n\n\tif ( this.enabled === false ) return;\n\n\tevent.preventDefault();\n\n}\n\nfunction interceptControlDown( event ) {\n\n\tif ( event.key === 'Control' ) {\n\n\t\tthis._controlActive = true;\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\tdocument.addEventListener( 'keyup', this._interceptControlUp, { passive: true, capture: true } );\n\n\t}\n\n}\n\nfunction interceptControlUp( event ) {\n\n\tif ( event.key === 'Control' ) {\n\n\t\tthis._controlActive = false;\n\n\t\tconst document = this.domElement.getRootNode(); // offscreen canvas compatibility\n\n\t\tdocument.removeEventListener( 'keyup', this._interceptControlUp, { passive: true, capture: true } );\n\n\t}\n\n}\n\nexport { OrbitControls };","import { Camera, Intersection, Object3D, Plane, Raycaster, Vector2, Vector3 } from 'three'\n\nexport interface RaycasterInterface {\n  position: Vector3\n  updatePosition(coords: Vector2): void\n  intersect(coords: Vector2, objects: Object3D[], recursive?: boolean): Intersection[],\n}\n\nexport interface RaycasterConfigInterface {\n  camera: Camera\n  resetPosition?: Vector3\n}\n\nexport default function useRaycaster(options: RaycasterConfigInterface): RaycasterInterface {\n  const {\n    camera,\n    resetPosition = new Vector3(0, 0, 0),\n  } = options\n\n  const raycaster = new Raycaster()\n  const position = resetPosition.clone()\n  const plane = new Plane(new Vector3(0, 0, 1), 0)\n\n  const updatePosition = (coords: Vector2) => {\n    raycaster.setFromCamera(coords, camera)\n    camera.getWorldDirection(plane.normal)\n    raycaster.ray.intersectPlane(plane, position)\n  }\n\n  const intersect = (coords: Vector2, objects: Object3D[], recursive = false) => {\n    raycaster.setFromCamera(coords, camera)\n    return raycaster.intersectObjects(objects, recursive)\n  }\n\n  return {\n    position,\n    updatePosition,\n    intersect,\n  }\n}\n","/* eslint-disable @typescript-eslint/no-empty-function */\nimport { Camera, InstancedMesh, Intersection, Object3D, Vector2, Vector3 } from 'three'\nimport useRaycaster from './useRaycaster'\n\nexport interface PointerEventInterface {\n  type: 'pointerenter' | 'pointermove' | 'pointerleave' | 'click' | 'pointerdown' | 'pointerup'\n  position?: Vector2\n  positionN?: Vector2\n  positionV3?: Vector3\n}\n\nexport interface PointerIntersectEventInterface {\n  type: 'pointerenter' | 'pointerover' | 'pointermove' | 'pointerleave' | 'click' | 'pointerdown' | 'pointerup'\n  component: any\n  over?: boolean\n  intersect?: Intersection,\n  intersects?: Intersection[]\n}\n\nexport type PointerCallbackType = (e: PointerEventInterface) => void\nexport type PointerIntersectCallbackType = (e: PointerIntersectEventInterface) => void\n\nexport interface PointerPublicConfigInterface {\n  intersectMode?: 'frame'\n  intersectRecursive?: boolean\n  touch?: boolean\n  resetOnEnd?: boolean\n  onEnter?: PointerCallbackType\n  onMove?: PointerCallbackType\n  onUp?: PointerCallbackType\n  onDown?: PointerCallbackType\n  onLeave?: PointerCallbackType\n  onClick?: PointerCallbackType\n  onIntersectEnter?: PointerIntersectCallbackType\n  onIntersectOver?: PointerIntersectCallbackType\n  onIntersectMove?: PointerIntersectCallbackType\n  onIntersectLeave?: PointerIntersectCallbackType\n  onIntersectUp?: PointerIntersectCallbackType\n  onIntersectDown?: PointerIntersectCallbackType\n  onIntersectClick?: PointerIntersectCallbackType\n}\n\nexport interface PointerConfigInterface extends PointerPublicConfigInterface {\n  camera: Camera\n  domElement: HTMLCanvasElement\n  intersectObjects: Object3D[] | (() => Object3D[])\n}\n\nexport interface PointerInterface {\n  position: Vector2\n  positionN: Vector2\n  positionV3: Vector3\n  intersectObjects: Object3D[] | (() => Object3D[])\n  listeners: boolean\n  addListeners(cb: void): void\n  removeListeners(cb: void): void\n  intersect(): void\n}\n\nexport default function usePointer(options: PointerConfigInterface): PointerInterface {\n  const {\n    camera,\n    domElement,\n    intersectObjects,\n    intersectRecursive = false,\n    touch = true,\n    resetOnEnd = false,\n    onEnter = () => {},\n    onMove = () => {},\n    onDown = () => {},\n    onUp = () => {},\n    onLeave = () => {},\n    onClick = () => {},\n    onIntersectEnter = () => {},\n    onIntersectOver = () => {},\n    onIntersectMove = () => {},\n    onIntersectLeave = () => {},\n    onIntersectUp = () => {},\n    onIntersectDown = () => {},\n    onIntersectClick = () => {},\n  } = options\n\n  const position = new Vector2(0, 0)\n  const positionN = new Vector2(0, 0)\n\n  const raycaster = useRaycaster({ camera })\n  const positionV3 = raycaster.position\n\n  const obj: PointerInterface = {\n    position,\n    positionN,\n    positionV3,\n    intersectObjects,\n    listeners: false,\n    addListeners,\n    removeListeners,\n    intersect,\n  }\n\n  return obj\n\n  function reset() {\n    position.set(0, 0)\n    positionN.set(0, 0)\n    positionV3.set(0, 0, 0)\n  }\n\n  function updatePosition(event: TouchEvent | MouseEvent) {\n    let x, y\n    // @ts-ignore\n    if (event.touches && event.touches.length > 0) {\n      x = (<TouchEvent>event).touches[0].clientX\n      y = (<TouchEvent>event).touches[0].clientY\n    } else {\n      x = (<MouseEvent>event).clientX\n      y = (<MouseEvent>event).clientY\n    }\n\n    const rect = domElement.getBoundingClientRect()\n    position.x = x - rect.left\n    position.y = y - rect.top\n    positionN.x = (position.x / rect.width) * 2 - 1\n    positionN.y = -(position.y / rect.height) * 2 + 1\n    raycaster.updatePosition(positionN)\n  }\n\n  function intersect() {\n    const _intersectObjects = getIntersectObjects()\n    if (_intersectObjects.length) {\n      const intersects = raycaster.intersect(positionN, _intersectObjects, intersectRecursive)\n      const offObjects: Object3D[] = [..._intersectObjects]\n      const iMeshes: InstancedMesh[] = []\n\n      intersects.forEach(intersect => {\n        const { object } = intersect\n        const component = getComponent(object)\n\n        // only once for InstancedMesh\n        if (object instanceof InstancedMesh) {\n          if (iMeshes.indexOf(object) !== -1) return\n          iMeshes.push(object)\n        }\n\n        if (!object.userData.over) {\n          object.userData.over = true\n          const overEvent: PointerIntersectEventInterface = { type: 'pointerover', over: true, component, intersect, intersects }\n          const enterEvent: PointerIntersectEventInterface = { ...overEvent, type: 'pointerenter' }\n          onIntersectOver(overEvent)\n          onIntersectEnter(enterEvent)\n          component?.onPointerOver?.(overEvent)\n          component?.onPointerEnter?.(enterEvent)\n        }\n\n        const moveEvent: PointerIntersectEventInterface = { type: 'pointermove', component, intersect }\n        onIntersectMove(moveEvent)\n        component?.onPointerMove?.(moveEvent)\n\n        offObjects.splice(offObjects.indexOf((<Object3D>object)), 1)\n      })\n\n      offObjects.forEach(object => {\n        const component = getComponent(object)\n        if (object.userData.over) {\n          object.userData.over = false\n          const overEvent: PointerIntersectEventInterface = { type: 'pointerover', over: false, component }\n          const leaveEvent: PointerIntersectEventInterface = { ...overEvent, type: 'pointerleave' }\n          onIntersectOver(overEvent)\n          onIntersectLeave(leaveEvent)\n          component?.onPointerOver?.(overEvent)\n          component?.onPointerLeave?.(leaveEvent)\n        }\n      })\n    }\n  }\n\n  function pointerEnter(event: TouchEvent | MouseEvent) {\n    updatePosition(event)\n    onEnter({ type: 'pointerenter', position, positionN, positionV3 })\n  }\n\n  function pointerMove(event: TouchEvent | MouseEvent) {\n    updatePosition(event)\n    onMove({ type: 'pointermove', position, positionN, positionV3 })\n    intersect()\n  }\n  function pointerDown(event: TouchEvent | MouseEvent) {\n    updatePosition(event)\n    const _intersectObjects = getIntersectObjects()\n    if (_intersectObjects.length) {\n      const intersects = raycaster.intersect(positionN, _intersectObjects, intersectRecursive)\n      const iMeshes: InstancedMesh[] = []\n      intersects.forEach(intersect => {\n        const { object } = intersect\n        const component = getComponent(object)\n\n        // only once for InstancedMesh\n        if (object instanceof InstancedMesh) {\n          if (iMeshes.indexOf(object) !== -1) return\n          iMeshes.push(object)\n        }\n\n        const event: PointerIntersectEventInterface = { type: 'pointerdown', component, intersect, intersects }\n        onIntersectDown(event)\n        component?.onPointerDown?.(event)\n      })\n    }\n    onDown({ type: 'pointerdown', position, positionN, positionV3 })\n  }\n  function pointerUp(event: TouchEvent | MouseEvent) {\n    updatePosition(event)\n    const _intersectObjects = getIntersectObjects()\n    if (_intersectObjects.length) {\n      const intersects = raycaster.intersect(positionN, _intersectObjects, intersectRecursive)\n      const iMeshes: InstancedMesh[] = []\n      intersects.forEach(intersect => {\n        const { object } = intersect\n        const component = getComponent(object)\n\n        // only once for InstancedMesh\n        if (object instanceof InstancedMesh) {\n          if (iMeshes.indexOf(object) !== -1) return\n          iMeshes.push(object)\n        }\n\n        const event: PointerIntersectEventInterface = { type: 'pointerup', component, intersect, intersects }\n        onIntersectUp(event)\n        component?.onPointerUp?.(event)\n      })\n    }\n    onUp({ type: 'pointerup', position, positionN, positionV3 })\n  }\n\n  function pointerClick(event: TouchEvent | MouseEvent) {\n    updatePosition(event)\n    const _intersectObjects = getIntersectObjects()\n    if (_intersectObjects.length) {\n      const intersects = raycaster.intersect(positionN, _intersectObjects, intersectRecursive)\n      const iMeshes: InstancedMesh[] = []\n\n      // only fire events for the intersection closest to the camera\n    //   let closest_distance = Infinity\n    //   let intersect = null\n    //   for(let i of intersects){\n    //     if(i.distance < closest_distance) intersect = i;\n    //   }\n\n    //   if(intersect){\n      intersects.forEach(intersect => {\n        const { object } = intersect\n        const component = getComponent(object)\n\n        // only once for InstancedMesh\n        if (object instanceof InstancedMesh) {\n          if (iMeshes.indexOf(object) !== -1) return\n          iMeshes.push(object)\n        }\n\n        const event: PointerIntersectEventInterface = { type: 'click', component, intersect, intersects }\n        onIntersectClick(event)\n        component?.onClick?.(event)\n    //   }\n      })\n    }\n    onClick({ type: 'click', position, positionN, positionV3 })\n  }\n\n  function pointerLeave() {\n    if (resetOnEnd) reset()\n    onLeave({ type: 'pointerleave' })\n  }\n\n  function getComponent(object: Object3D) {\n    if (object.userData.component) return object.userData.component\n\n    let parent = object.parent\n    while (parent) {\n      if (parent.userData.component) {\n        return parent.userData.component\n      }\n      parent = parent.parent\n    }\n\n    return undefined\n  }\n\n  function getIntersectObjects() {\n    if (typeof intersectObjects === 'function') {\n      return intersectObjects()\n    } else return intersectObjects\n  }\n\n  function addListeners() {\n    domElement.addEventListener('mouseenter', pointerEnter)\n    domElement.addEventListener('mousemove', pointerMove)\n    domElement.addEventListener('mouseleave', pointerLeave)\n    domElement.addEventListener('pointerdown', pointerDown)\n    domElement.addEventListener('pointerup', pointerUp)\n    domElement.addEventListener('click', pointerClick)\n    if (touch) {\n      domElement.addEventListener('touchstart', pointerEnter)\n      domElement.addEventListener('touchmove', pointerMove)\n      domElement.addEventListener('touchend', pointerLeave)\n    }\n    obj.listeners = true\n  }\n\n  function removeListeners() {\n    domElement.removeEventListener('mouseenter', pointerEnter)\n    domElement.removeEventListener('mousemove', pointerMove)\n    domElement.removeEventListener('mouseleave', pointerLeave)\n    domElement.removeEventListener('pointerdown', pointerDown)\n    domElement.removeEventListener('pointerup', pointerUp)\n    domElement.removeEventListener('click', pointerClick)\n\n    domElement.removeEventListener('touchstart', pointerEnter)\n    domElement.removeEventListener('touchmove', pointerMove)\n    domElement.removeEventListener('touchend', pointerLeave)\n    obj.listeners = false\n  }\n}\n","import { Camera, Object3D, OrthographicCamera, PerspectiveCamera, Scene, WebGLRenderer, WebGLRendererParameters } from 'three'\n// import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js'\n  // @ts-ignore\n  import { OrbitControls } from '../controls/OrbitControls'\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js'\nimport usePointer, { PointerConfigInterface, PointerPublicConfigInterface, PointerInterface } from './usePointer'\n\nexport interface SizeInterface {\n  width: number\n  height: number\n  wWidth: number\n  wHeight: number\n  ratio: number\n}\n\nexport interface ThreeConfigInterface {\n  params?: WebGLRendererParameters\n  canvas?: HTMLCanvasElement\n  antialias: boolean\n  alpha: boolean\n  autoClear: boolean\n  orbitCtrl: boolean | Record<string, unknown>\n  pointer: boolean | PointerPublicConfigInterface\n  resize: boolean | string\n  width?: number\n  height?: number\n  onResize?(size: SizeInterface): void\n  [index:string]: any\n}\n\nexport interface ThreeInterface {\n  config: ThreeConfigInterface\n  renderer: WebGLRenderer\n  composer?: EffectComposer\n  camera?: Camera\n  cameraCtrl?: OrbitControls\n  scene?: Scene\n  pointer?: PointerInterface\n  size: SizeInterface\n  init(): boolean\n  dispose(): void\n  render(): void\n  renderC(): void\n  setSize(width: number, height: number): void\n  addIntersectObject(o: Object3D): void\n  removeIntersectObject(o: Object3D): void\n}\n\n/**\n * Three.js helper\n */\nexport default function useThree(params: ThreeConfigInterface): ThreeInterface {\n  // default config\n  const config: ThreeConfigInterface = {\n    antialias: true,\n    alpha: false,\n    autoClear: true,\n    orbitCtrl: false,\n    pointer: false,\n    resize: false,\n    width: 300,\n    height: 150,\n  }\n\n  if (params) {\n    Object.entries(params).forEach(([key, value]) => {\n      config[key] = value\n    })\n  }\n\n  // size\n  const size: SizeInterface = {\n    width: 1, height: 1,\n    wWidth: 1, wHeight: 1,\n    ratio: 1,\n  }\n\n  const beforeRenderCallbacks: {(): void}[] = []\n\n  const intersectObjects: Object3D[] = []\n\n  const renderer = createRenderer()\n\n  // returned object\n  const obj: ThreeInterface = {\n    config,\n    renderer,\n    size,\n    init,\n    dispose,\n    render,\n    renderC,\n    setSize,\n    addIntersectObject, removeIntersectObject,\n  }\n\n  return obj\n\n  /**\n   * create WebGLRenderer\n   */\n  function createRenderer(): WebGLRenderer {\n    const renderer = new WebGLRenderer({ canvas: config.canvas, antialias: config.antialias, alpha: config.alpha, ...config.params })\n    renderer.autoClear = config.autoClear\n    return renderer\n  }\n\n  /**\n   * init three\n   */\n  function init() {\n    if (!obj.scene) {\n      console.error('Missing Scene')\n      return false\n    }\n\n    if (!obj.camera) {\n      console.error('Missing Camera')\n      return false\n    }\n\n    if (config.resize) {\n      onResize()\n      window.addEventListener('resize', onResize)\n    } else if (config.width && config.height) {\n      setSize(config.width, config.height)\n    }\n\n    initPointer()\n\n    if (config.orbitCtrl) {\n      // @ts-ignore\n      const cameraCtrl = new OrbitControls(obj.camera, obj.renderer.domElement)\n      if (config.orbitCtrl instanceof Object) {\n        Object.entries(config.orbitCtrl).forEach(([key, value]) => {\n          // @ts-ignore\n          cameraCtrl[key] = value\n        })\n      }\n      onBeforeRender(() => { \n        cameraCtrl.update() \n      })\n      obj.cameraCtrl = cameraCtrl\n    }\n\n    return true\n  }\n\n  /**\n   * init pointer\n   */\n  function initPointer() {\n    let pointerConf: PointerConfigInterface = {\n      camera: obj.camera!,\n      domElement: obj.renderer!.domElement,\n      intersectObjects,\n    }\n\n    if (config.pointer && config.pointer instanceof Object) {\n      pointerConf = { ...pointerConf, ...config.pointer }\n    }\n\n    const pointer = obj.pointer = usePointer(pointerConf)\n    if (config.pointer || intersectObjects.length) {\n      pointer.addListeners()\n      if (pointerConf.intersectMode === 'frame') {\n        onBeforeRender(pointer.intersect)\n      }\n    }\n  }\n\n  /**\n   * add before render callback\n   */\n  function onBeforeRender(cb: {(): void}) {\n    beforeRenderCallbacks.push(cb)\n  }\n\n  /**\n   * default render\n   */\n  function render() {\n    // if (obj.cameraCtrl) obj.cameraCtrl.update()\n    beforeRenderCallbacks.forEach(c => c())\n    obj.renderer!.render(obj.scene!, obj.camera!)\n  }\n\n  /**\n   * composer render\n   */\n  function renderC() {\n    // if (obj.cameraCtrl) obj.cameraCtrl.update()\n    beforeRenderCallbacks.forEach(c => c())\n    obj.composer!.render()\n  }\n\n  /**\n   * add intersect object\n   */\n  function addIntersectObject(o: Object3D) {\n    if (intersectObjects.indexOf(o) === -1) {\n      intersectObjects.push(o)\n    }\n    // add listeners if needed\n    if (obj.pointer && !obj.pointer.listeners) {\n      obj.pointer.addListeners()\n    }\n  }\n\n  /**\n   * remove intersect object\n   */\n  function removeIntersectObject(o: Object3D) {\n    const i = intersectObjects.indexOf(o)\n    if (i !== -1) {\n      intersectObjects.splice(i, 1)\n    }\n    // remove listeners if needed\n    if (obj.pointer && !config.pointer && intersectObjects.length === 0) {\n      obj.pointer.removeListeners()\n    }\n  }\n\n  /**\n   * remove listeners and dispose\n   */\n  function dispose() {\n    // beforeRenderCallbacks = []\n    window.removeEventListener('resize', onResize)\n    if (obj.pointer) obj.pointer.removeListeners()\n    if (obj.cameraCtrl) obj.cameraCtrl.dispose()\n    if (obj.renderer) obj.renderer.dispose()\n  }\n\n  /**\n   * resize listener\n   */\n  function onResize() {\n    if (config.resize === 'window') {\n      setSize(window.innerWidth, window.innerHeight)\n    } else {\n      const elt = obj.renderer!.domElement.parentNode as Element\n      if (elt) setSize(elt.clientWidth, elt.clientHeight)\n    }\n    config.onResize?.(size)\n  }\n\n  /**\n   * update renderer size and camera\n   */\n  function setSize(width: number, height: number) {\n    size.width = width\n    size.height = height\n    size.ratio = width / height\n\n    obj.renderer!.setSize(width, height, false)\n\n    // already done in EffectComposer\n    // if (obj.composer) {\n    //   obj.composer.setSize(width, height)\n    // }\n\n    const camera = (<Camera>obj.camera!)\n    if (camera.type === 'PerspectiveCamera') {\n      const pCamera = (<PerspectiveCamera>camera)\n      pCamera.aspect = size.ratio\n      pCamera.updateProjectionMatrix()\n    }\n\n    if (camera.type === 'OrthographicCamera') {\n      const oCamera = (<OrthographicCamera>camera)\n      size.wWidth = oCamera.right - oCamera.left\n      size.wHeight = oCamera.top - oCamera.bottom\n    } else {\n      const wsize = getCameraSize()\n      size.wWidth = wsize[0]\n      size.wHeight = wsize[1]\n    }\n  }\n\n  /**\n   * calculate camera visible area size\n   */\n  function getCameraSize() {\n    const camera = (<PerspectiveCamera>obj.camera!)\n    const vFOV = (camera.fov * Math.PI) / 180\n    const h = 2 * Math.tan(vFOV / 2) * Math.abs(camera.position.z)\n    const w = h * camera.aspect\n    return [w, h]\n  }\n}\n","/* eslint-disable no-use-before-define */\nimport { Camera, Scene, WebGLRenderer, WebGLRendererParameters } from 'three'\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\nimport { ComponentPublicInstance, defineComponent, InjectionKey, PropType, watchEffect } from 'vue'\nimport { bindObjectProp } from '../tools'\nimport { PointerInterface, PointerPublicConfigInterface } from './usePointer'\nimport useThree, { SizeInterface, ThreeConfigInterface, ThreeInterface } from './useThree'\n\ntype CallbackType<T> = (event: T) => void\n\n// type EventType = 'init' | 'mounted' | 'beforerender' | 'afterrender' | 'resize'\n\nexport interface EventInterface {\n  type: 'init' | 'mounted'\n  renderer: RendererInterface\n}\n\nexport interface RenderEventInterface {\n  type: 'beforerender' | 'afterrender'\n  renderer: RendererInterface\n  time: number\n}\n\nexport interface ResizeEventInterface {\n  type: 'resize'\n  renderer: RendererInterface\n  size: SizeInterface\n}\n\ntype InitCallbackType = CallbackType<EventInterface>\ntype MountedCallbackType = CallbackType<EventInterface>\ntype RenderCallbackType = CallbackType<RenderEventInterface>\ntype ResizeCallbackType = CallbackType<ResizeEventInterface>\n// type CallbackTypes = InitCallbackType | MountedCallbackType | RenderCallbackType | ResizeCallbackType\n\n// interface EventMap {\n//   'init': EventInterface;\n//   'mounted': EventInterface;\n//   'beforerender': RenderEventInterface;\n//   'afterrender': RenderEventInterface;\n//   'resize': ResizeEventInterface;\n// }\n\ninterface EventCallbackMap {\n  'init': InitCallbackType;\n  'mounted': MountedCallbackType;\n  'beforerender': RenderCallbackType;\n  'afterrender': RenderCallbackType;\n  'resize': ResizeCallbackType;\n}\n\ninterface RenderFunctionEventInterface {\n  renderer: RendererInterface\n  time: number\n}\n\ninterface RendererSetupInterface {\n  canvas: HTMLCanvasElement\n  three: ThreeInterface\n  renderer: WebGLRenderer\n  size: SizeInterface\n  renderFn(e: RenderFunctionEventInterface): void\n  raf: boolean\n\n  $pointer?: PointerInterface\n\n  initCallbacks: InitCallbackType[]\n  mountedCallbacks: MountedCallbackType[]\n  beforeRenderCallbacks: RenderCallbackType[]\n  afterRenderCallbacks: RenderCallbackType[]\n  resizeCallbacks: ResizeCallbackType[]\n}\n\nexport interface RendererInterface extends RendererSetupInterface {\n  scene?: Scene\n  camera?: Camera\n  composer?: EffectComposer\n\n  onInit(cb: InitCallbackType): void\n  onMounted(cb: MountedCallbackType): void\n\n  onBeforeRender(cb: RenderCallbackType): void\n  offBeforeRender(cb: RenderCallbackType): void\n  onAfterRender(cb: RenderCallbackType): void\n  offAfterRender(cb: RenderCallbackType): void\n\n  onResize(cb: ResizeCallbackType): void\n  offResize(cb: ResizeCallbackType): void\n\n  addListener<T extends keyof EventCallbackMap>(t: T, cb: EventCallbackMap[T]): void\n  removeListener<T extends keyof EventCallbackMap>(t: T, cb: EventCallbackMap[T]): void\n}\n\nexport interface RendererPublicInterface extends ComponentPublicInstance, RendererInterface {}\n\nexport const RendererInjectionKey: InjectionKey<RendererPublicInterface> = Symbol('Renderer')\n\nexport default defineComponent({\n  name: 'Renderer',\n  props: {\n    params: { type: Object as PropType<WebGLRendererParameters>, default: () => ({}) },\n    antialias: Boolean,\n    alpha: Boolean,\n    autoClear: { type: Boolean, default: true },\n    orbitCtrl: { type: [Boolean, Object] as PropType<boolean | Record<string, unknown>>, default: false },\n    pointer: { type: [Boolean, Object] as PropType<boolean | PointerPublicConfigInterface>, default: false },\n    resize: { type: [Boolean, String] as PropType<boolean | string>, default: false },\n    shadow: Boolean,\n    width: String,\n    height: String,\n    pixelRatio: Number,\n    xr: Boolean,\n    props: { type: Object, default: () => ({}) },\n    onReady: Function as PropType<(r: RendererInterface) => void>,\n  },\n  inheritAttrs: false,\n  setup(props, { attrs }): RendererSetupInterface {\n    const initCallbacks: InitCallbackType[] = []\n    const mountedCallbacks: MountedCallbackType[] = []\n    const beforeRenderCallbacks: RenderCallbackType[] = []\n    const afterRenderCallbacks: RenderCallbackType[] = []\n    const resizeCallbacks: ResizeCallbackType[] = []\n\n    const canvas = document.createElement('canvas')\n    Object.entries(attrs).forEach(([key, value]) => {\n      const matches = key.match(/^on([A-Z][a-zA-Z]*)$/)\n      if (matches) {\n        canvas.addEventListener(matches[1].toLowerCase(), value as {(): void })\n      } else {\n        canvas.setAttribute(key, value as string)\n      }\n    })\n\n    const config: ThreeConfigInterface = {\n      canvas,\n      params: props.params,\n      antialias: props.antialias,\n      alpha: props.alpha,\n      autoClear: props.autoClear,\n      orbitCtrl: props.orbitCtrl,\n      pointer: props.pointer,\n      resize: props.resize,\n    }\n\n    if (props.width) config.width = parseInt(props.width)\n    if (props.height) config.height = parseInt(props.height)\n\n    const three = useThree(config)\n    bindObjectProp(props, 'props', three.renderer)\n\n    watchEffect(() => {\n      if (props.pixelRatio) three.renderer.setPixelRatio(props.pixelRatio)\n    })\n\n    const renderFn: {(): void} = () => {}\n\n    return {\n      canvas,\n      three,\n      renderer: three.renderer,\n      size: three.size,\n      renderFn,\n      raf: true,\n      initCallbacks,\n      mountedCallbacks,\n      beforeRenderCallbacks,\n      afterRenderCallbacks,\n      resizeCallbacks,\n    }\n  },\n  computed: {\n    camera: {\n      get: function(): Camera | undefined { return this.three.camera },\n      set: function(camera: Camera): void { this.three.camera = camera },\n    },\n    scene: {\n      get: function(): Scene | undefined { return this.three.scene },\n      set: function(scene: Scene): void { this.three.scene = scene },\n    },\n    composer: {\n      get: function(): EffectComposer | undefined { return this.three.composer },\n      set: function(composer: EffectComposer): void { this.three.composer = composer },\n    },\n  },\n  provide() {\n    return {\n      [RendererInjectionKey as symbol]: this,\n    }\n  },\n  mounted() {\n    // appendChild won't work on reload\n    this.$el.parentNode.insertBefore(this.canvas, this.$el)\n\n    if (this.three.init()) {\n      if (this.three.pointer) {\n        this.$pointer = this.three.pointer\n      }\n\n      // TODO : don't use config\n      this.three.config.onResize = (size) => {\n        this.resizeCallbacks.forEach(e => e({ type: 'resize', renderer: this, size }))\n      }\n\n      if (this.shadow) {\n        this.renderer.shadowMap.enabled = true\n      }\n\n      this.renderFn = this.three.composer ? this.three.renderC : this.three.render\n\n      this.initCallbacks.forEach(e => e({ type: 'init', renderer: this }))\n      this.onReady?.(this as RendererInterface)\n\n      if (this.xr) {\n        this.renderer.xr.enabled = true\n        this.renderer.setAnimationLoop(this.render)\n      } else {\n        requestAnimationFrame(this.renderLoop)\n      }\n    }\n\n    this.mountedCallbacks.forEach(e => e({ type: 'mounted', renderer: this }))\n  },\n  beforeUnmount() {\n    this.canvas.remove()\n    this.beforeRenderCallbacks = []\n    this.afterRenderCallbacks = []\n    this.raf = false\n    this.three.dispose()\n  },\n  methods: {\n    onInit(cb: InitCallbackType) { this.addListener('init', cb) },\n    onMounted(cb: MountedCallbackType) { this.addListener('mounted', cb) },\n    onBeforeRender(cb: RenderCallbackType) { this.addListener('beforerender', cb) },\n    offBeforeRender(cb: RenderCallbackType) { this.removeListener('beforerender', cb) },\n    onAfterRender(cb: RenderCallbackType) { this.addListener('afterrender', cb) },\n    offAfterRender(cb: RenderCallbackType) { this.removeListener('afterrender', cb) },\n    onResize(cb: ResizeCallbackType) { this.addListener('resize', cb) },\n    offResize(cb: ResizeCallbackType) { this.removeListener('resize', cb) },\n\n    addListener(type: string, cb: {(e?: any): void}) {\n      const callbacks = this.getCallbacks(type)\n      callbacks.push(cb)\n    },\n\n    removeListener(type: string, cb: {(e?: any): void}) {\n      const callbacks = this.getCallbacks(type)\n      const index = callbacks.indexOf(cb)\n      if (index !== -1) callbacks.splice(index, 1)\n    },\n\n    getCallbacks(type: string) {\n      if (type === 'init') {\n        return this.initCallbacks\n      } else if (type === 'mounted') {\n        return this.mountedCallbacks\n      } else if (type === 'beforerender') {\n        return this.beforeRenderCallbacks\n      } else if (type === 'afterrender') {\n        return this.afterRenderCallbacks\n      } else {\n        return this.resizeCallbacks\n      }\n    },\n\n    render(time: number) {\n      this.beforeRenderCallbacks.forEach(e => e({ type: 'beforerender', renderer: this, time }))\n      // this.onFrame?.(cbParams)\n      this.renderFn({ renderer: this, time })\n      this.afterRenderCallbacks.forEach(e => e({ type: 'afterrender', renderer: this, time }))\n    },\n    renderLoop(time: number) {\n      if (this.raf) requestAnimationFrame(this.renderLoop)\n      this.render(time)\n    },\n  },\n  render() {\n    return this.$slots.default ? this.$slots.default() : []\n  },\n  __hmrId: 'Renderer',\n})\n","import { defineComponent } from 'vue'\n// import { Camera } from 'three'\n// import { RendererInjectionKey, RendererInterface } from './Renderer'\n// import Object3D from './Object3D'\n\n// export interface CameraSetupInterface {\n//   renderer?: RendererInterface\n//   camera: Camera\n// }\n\nexport default defineComponent({\n  // TODO: eventually extend Object3D\n  // extends: Object3D,\n\n  props: {\n    props: { type: Object, default: () => ({}) },\n  },\n\n  // inject: { renderer: RendererInjectionKey as symbol },\n\n  // setup(): CameraSetupInterface {\n  //   return {}\n  // },\n\n  render() {\n    return this.$slots.default ? this.$slots.default() : []\n  },\n})\n\nexport function cameraSetProp(camera: any, key: string, value: any, updateProjectionMatrix = true) {\n  camera[key] = value\n  if (updateProjectionMatrix) camera.updateProjectionMatrix()\n}\n","import { defineComponent, inject, PropType, watch } from 'vue'\nimport { OrthographicCamera } from 'three'\nimport { bindObjectProp, bindProp } from '../tools'\nimport Camera, { cameraSetProp } from './Camera'\nimport { Vector3PropInterface } from './Object3D'\nimport { RendererInjectionKey } from './Renderer'\n\nexport default defineComponent({\n  extends: Camera,\n  name: 'OrthographicCamera',\n  props: {\n    left: { type: Number, default: -1 },\n    right: { type: Number, default: 1 },\n    top: { type: Number, default: 1 },\n    bottom: { type: Number, default: -1 },\n    near: { type: Number, default: 0.1 },\n    far: { type: Number, default: 2000 },\n    zoom: { type: Number, default: 1 },\n    position: { type: Object as PropType<Vector3PropInterface>, default: () => ({ x: 0, y: 0, z: 0 }) },\n  },\n  setup(props) {\n    const renderer = inject(RendererInjectionKey)\n    if (!renderer) {\n      console.error('Renderer not found')\n      return\n    }\n\n    const camera = new OrthographicCamera(props.left, props.right, props.top, props.bottom, props.near, props.far)\n    renderer.camera = camera\n\n    bindProp(props, 'position', camera)\n    bindObjectProp(props, 'props', camera, true, cameraSetProp);\n\n    ['left', 'right', 'top', 'bottom', 'near', 'far', 'zoom'].forEach(p => {\n      // @ts-ignore\n      watch(() => props[p], (value) => {\n        cameraSetProp(camera, p, value)\n      })\n    })\n\n    return { renderer, camera }\n  },\n  __hmrId: 'OrthographicCamera',\n})\n","import { defineComponent, inject, PropType, watch } from 'vue'\nimport { PerspectiveCamera } from 'three'\nimport { bindObjectProp, bindProp } from '../tools'\nimport Camera, { cameraSetProp } from './Camera'\nimport { Vector3PropInterface } from './Object3D'\nimport { RendererInjectionKey } from './Renderer'\n\nexport default defineComponent({\n  extends: Camera,\n  name: 'PerspectiveCamera',\n  props: {\n    aspect: { type: Number, default: 1 },\n    far: { type: Number, default: 2000 },\n    fov: { type: Number, default: 50 },\n    near: { type: Number, default: 0.1 },\n    position: { type: Object as PropType<Vector3PropInterface>, default: () => ({ x: 0, y: 0, z: 0 }) },\n    lookAt: { type: Object as PropType<Vector3PropInterface>, default: null },\n  },\n  setup(props) {\n    const renderer = inject(RendererInjectionKey)\n    if (!renderer) {\n      console.error('Renderer not found')\n      return\n    }\n\n    const camera = new PerspectiveCamera(props.fov, props.aspect, props.near, props.far)\n    renderer.camera = camera\n\n    bindProp(props, 'position', camera)\n\n    if (props.lookAt) camera.lookAt(props.lookAt.x ?? 0, props.lookAt.y!, props.lookAt.z!)\n    watch(() => props.lookAt, (v) => { camera.lookAt(v.x ?? 0, v.y!, v.z!) }, { deep: true })\n\n    bindObjectProp(props, 'props', camera, true, cameraSetProp);\n\n    ['aspect', 'far', 'fov', 'near'].forEach(p => {\n      // @ts-ignore\n      watch(() => props[p], (value) => {\n        cameraSetProp(camera, p, value)\n      })\n    })\n\n    return { renderer, camera }\n  },\n  __hmrId: 'PerspectiveCamera',\n})\n","import { defineComponent, inject, InjectionKey, provide, watch } from 'vue'\nimport { Scene, Color, Object3D, Texture } from 'three'\nimport { RendererInjectionKey } from './Renderer'\n\nexport const SceneInjectionKey: InjectionKey<Scene> = Symbol('Scene')\n\nexport default defineComponent({\n  name: 'Scene',\n  props: {\n    background: [String, Number, Object],\n  },\n  setup(props) {\n    const renderer = inject(RendererInjectionKey)\n    const scene = new Scene()\n\n    if (!renderer) {\n      console.error('Renderer not found')\n      return\n    }\n\n    renderer.scene = scene\n    provide(SceneInjectionKey, scene)\n\n    const setBackground = (value: any): void => {\n      if (!value) return\n      if (typeof value === 'string' || typeof value === 'number') {\n        if (scene.background instanceof Color) scene.background.set(value)\n        else scene.background = new Color(value)\n      } else if (value instanceof Texture) {\n        scene.background = value\n      }\n    }\n\n    setBackground(props.background)\n    watch(() => props.background, setBackground)\n\n    const add = (o: Object3D): void => { scene.add(o) }\n    const remove = (o: Object3D): void => { scene.remove(o) }\n\n    return { scene, add, remove }\n  },\n  render() {\n    return this.$slots.default ? this.$slots.default() : []\n  },\n  __hmrId: 'Scene',\n})\n","import { Object3D, Scene } from 'three'\nimport { ComponentPublicInstance, defineComponent, getCurrentInstance, PropType, watch } from 'vue'\nimport { bindObjectProp, bindProp } from '../tools'\nimport { RendererInjectionKey, RendererInterface } from './Renderer'\nimport { SceneInjectionKey } from './Scene'\n\nexport interface Object3DSetupInterface {\n  renderer?: RendererInterface\n  scene?: Scene\n  o3d?: Object3D\n  parent?: ComponentPublicInstance\n}\n\nexport interface Object3DInterface extends Object3DSetupInterface {\n  addToParent(o?: Object3D): boolean\n  removeFromParent(o?: Object3D): boolean\n  add(o: Object3D): void\n  remove(o: Object3D): void\n}\n\nexport interface Object3DPublicInterface extends ComponentPublicInstance, Object3DInterface {}\n\n// export function object3DSetup(): Object3DSetupInterface {\n//   const renderer = inject(RendererInjectionKey)\n//   const scene = inject(SceneInjectionKey)\n//   return { scene, renderer }\n// }\n\nexport const pointerProps = {\n  onPointerEnter: Function,\n  onPointerOver: Function,\n  onPointerMove: Function,\n  onPointerLeave: Function,\n  onPointerDown: Function,\n  onPointerUp: Function,\n  onClick: Function,\n}\n\nexport interface Vector2PropInterface {\n  x?: number\n  y?: number\n  width?: number\n  height?: number\n}\n\nexport interface Vector3PropInterface extends Vector2PropInterface {\n  z?: number\n}\n\nexport interface EulerPropInterface extends Vector3PropInterface {\n  order?: 'XYZ' | 'YZX' | 'ZXY' | 'XZY' | 'YXZ' | 'ZYX'\n}\n\nexport default defineComponent({\n  name: 'Object3D',\n  // inject for sub components\n  inject: {\n    renderer: RendererInjectionKey as symbol,\n    scene: SceneInjectionKey as symbol,\n  },\n  emits: ['created', 'ready'],\n  props: {\n    position: { type: Object as PropType<Vector3PropInterface>, default: () => ({ x: 0, y: 0, z: 0 }) },\n    rotation: { type: Object as PropType<EulerPropInterface>, default: () => ({ x: 0, y: 0, z: 0 }) },\n    scale: { type: Object as PropType<Vector3PropInterface>, default: () => ({ x: 1, y: 1, z: 1, order: 'XYZ' }) },\n    lookAt: { type: Object as PropType<Vector3PropInterface>, default: null },\n    userData: { type: Object, default: () => ({}) },\n    visible: { type: Boolean, default: true },\n    props: { type: Object, default: () => ({}) },\n    disableAdd: { type: Boolean, default: false },\n    disableRemove: { type: Boolean, default: false },\n    ...pointerProps,\n  },\n  setup(): Object3DSetupInterface {\n    // return object3DSetup()\n    return {}\n  },\n  created() {\n    if (!this.renderer) {\n      console.error('Missing parent Renderer')\n    }\n    if (!this.scene) {\n      console.error('Missing parent Scene')\n    }\n  },\n  unmounted() {\n    if (!this.disableRemove) this.removeFromParent()\n    if (this.o3d) {\n      if (this.renderer) this.renderer.three.removeIntersectObject(this.o3d)\n    }\n  },\n  methods: {\n    initObject3D(o3d: Object3D) {\n      this.o3d = o3d\n      o3d.userData.component = this\n\n      if (this.onPointerEnter ||\n        this.onPointerOver ||\n        this.onPointerMove ||\n        this.onPointerLeave ||\n        this.onPointerDown ||\n        this.onPointerUp ||\n        this.onClick) {\n        if (this.renderer) this.renderer.three.addIntersectObject(o3d)\n      }\n\n      bindProp(this, 'position', o3d)\n      bindProp(this, 'rotation', o3d)\n      bindProp(this, 'scale', o3d)\n      bindProp(this, 'userData', o3d.userData)\n      bindProp(this, 'visible', o3d)\n\n      bindObjectProp(this, 'props', o3d)\n\n      this.$emit('created', o3d)\n\n      if (this.lookAt) o3d.lookAt(this.lookAt.x ?? 0, this.lookAt.y!, this.lookAt.z!)\n      watch(() => this.lookAt, (v) => { o3d.lookAt(v.x ?? 0, v.y!, v.z!) }, { deep: true })\n\n      this.parent = this.getParent()\n      if (!this.disableAdd) {\n        if (this.addToParent()) this.$emit('ready', this)\n        else console.error('Missing parent (Scene, Group...)')\n      }\n    },\n    getParent(): undefined | ComponentPublicInstance {\n      let parent = this.$parent\n\n      if (!parent) {\n        // for script setup\n        const instance = getCurrentInstance() as any // ctx is internal\n        if (instance && instance.parent) parent = instance.parent.ctx\n      }\n\n      while (parent) {\n        if ((parent as any).add) return parent\n        parent = parent.$parent\n      }\n      return undefined\n    },\n    addToParent(o?: Object3D) {\n      const o3d = o || this.o3d\n      if (this.parent) {\n        (this.parent as any).add(o3d)\n        return true\n      }\n      return false\n    },\n    removeFromParent(o?: Object3D) {\n      const o3d = o || this.o3d\n      if (this.parent) {\n        (this.parent as any).remove(o3d)\n        return true\n      }\n      return false\n    },\n    add(o: Object3D) { this.o3d?.add(o) },\n    remove(o: Object3D) { this.o3d?.remove(o) },\n  },\n  render() {\n    return this.$slots.default ? this.$slots.default() : []\n  },\n  __hmrId: 'Object3D',\n})\n","import { defineComponent } from 'vue'\nimport { Group } from 'three'\nimport Object3D from './Object3D'\n\nexport default defineComponent({\n  name: 'Group',\n  extends: Object3D,\n  setup() {\n    return {\n      group: new Group(),\n    }\n  },\n  created() {\n    this.initObject3D(this.group)\n  },\n  __hmrId: 'Group',\n})\n","import { defineComponent, inject, PropType } from 'vue'\nimport usePointer, { PointerInterface, PointerIntersectCallbackType } from './usePointer'\nimport { RendererInjectionKey, RendererInterface } from './Renderer'\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst emptyCallBack: PointerIntersectCallbackType = () => {}\n\ninterface RaycasterSetupInterface {\n  renderer?: RendererInterface\n  pointer?: PointerInterface\n}\n\nexport default defineComponent({\n  name: 'Raycaster',\n  props: {\n    onPointerEnter: { type: Function as PropType<PointerIntersectCallbackType>, default: emptyCallBack },\n    onPointerOver: { type: Function as PropType<PointerIntersectCallbackType>, default: emptyCallBack },\n    onPointerMove: { type: Function as PropType<PointerIntersectCallbackType>, default: emptyCallBack },\n    onPointerLeave: { type: Function as PropType<PointerIntersectCallbackType>, default: emptyCallBack },\n    onPointerUp: { type: Function as PropType<PointerIntersectCallbackType>, default: emptyCallBack },\n    onPointerDown: { type: Function as PropType<PointerIntersectCallbackType>, default: emptyCallBack },\n    onClick: { type: Function as PropType<PointerIntersectCallbackType>, default: emptyCallBack },\n    intersectMode: { type: String, default: 'move' },\n    intersectRecursive: { type: Boolean, default: false },\n  },\n  setup(): RaycasterSetupInterface {\n    const renderer = inject(RendererInjectionKey)\n    return { renderer }\n  },\n  mounted() {\n    if (!this.renderer) {\n      console.error('Renderer not found')\n      return\n    }\n    const renderer = this.renderer\n\n    this.renderer.onMounted(() => {\n      if (!renderer.camera) return\n\n      this.pointer = usePointer({\n        camera: renderer.camera,\n        domElement: renderer.canvas,\n        intersectObjects: () => renderer.scene ? renderer.scene.children : [],\n        intersectRecursive: this.intersectRecursive,\n        onIntersectEnter: this.onPointerEnter,\n        onIntersectOver: this.onPointerOver,\n        onIntersectMove: this.onPointerMove,\n        onIntersectLeave: this.onPointerLeave,\n        onIntersectUp: this.onPointerUp,\n        onIntersectDown: this.onPointerDown,\n        onIntersectClick: this.onClick,\n      })\n      this.pointer.addListeners()\n\n      if (this.intersectMode === 'frame') {\n        renderer.onBeforeRender(this.pointer.intersect)\n      }\n    })\n  },\n  unmounted() {\n    if (this.pointer) {\n      this.pointer.removeListeners()\n      this.renderer?.offBeforeRender(this.pointer.intersect)\n    }\n  },\n  render() {\n    return []\n  },\n  __hmrId: 'Raycaster',\n})\n","import { defineComponent, inject, onUnmounted, PropType } from 'vue'\nimport { CubeCamera, LinearMipmapLinearFilter, Mesh, RGBAFormat, WebGLCubeRenderTarget } from 'three'\nimport Object3D from './Object3D'\nimport { RendererInjectionKey } from './Renderer'\n\ninterface CubeCameraSetupInterface {\n  cubeRT?: WebGLCubeRenderTarget\n  cubeCamera?: CubeCamera\n  updateRT?: {(): void}\n}\n\nexport default defineComponent({\n  extends: Object3D,\n  props: {\n    cubeRTSize: { type: Number, default: 256 },\n    cubeCameraNear: { type: Number, default: 0.1 },\n    cubeCameraFar: { type: Number, default: 2000 },\n    autoUpdate: Boolean,\n    hideMeshes: { type: Array as PropType<Mesh[]>, default: () => ([]) },\n  },\n  setup(props): CubeCameraSetupInterface {\n    const rendererC = inject(RendererInjectionKey)\n    if (!rendererC || !rendererC.scene) {\n      console.error('Missing Renderer / Scene')\n      return {}\n    }\n\n    const renderer = rendererC.renderer, scene = rendererC.scene\n    const cubeRT = new WebGLCubeRenderTarget(props.cubeRTSize, { format: RGBAFormat, generateMipmaps: true, minFilter: LinearMipmapLinearFilter })\n    const cubeCamera = new CubeCamera(props.cubeCameraNear, props.cubeCameraFar, cubeRT)\n    const updateRT = () => {\n      props.hideMeshes.forEach(m => { m.visible = false })\n      cubeCamera.update(renderer, scene)\n      props.hideMeshes.forEach(m => { m.visible = true })\n    }\n\n    if (props.autoUpdate) {\n      rendererC.onBeforeRender(updateRT)\n      onUnmounted(() => { rendererC.offBeforeRender(updateRT) })\n    } else {\n      rendererC.onMounted(updateRT)\n    }\n\n    return { cubeRT, cubeCamera, updateRT }\n  },\n  created() {\n    if (this.cubeCamera) this.initObject3D(this.cubeCamera)\n  },\n  render() {\n    return []\n  },\n  __hmrId: 'CubeCamera',\n})\n","import { ComponentPropsOptions, ComponentPublicInstance, defineComponent, InjectionKey, watch } from 'vue'\nimport { BufferGeometry, Material, Mesh as TMesh } from 'three'\nimport Object3D, { Object3DSetupInterface } from '../core/Object3D'\nimport { bindProp } from '../tools'\n\nexport interface MeshSetupInterface extends Object3DSetupInterface {\n  mesh?: TMesh\n  geometry?: BufferGeometry\n  material?: Material\n  loading?: boolean\n}\n\nexport interface MeshInterface extends MeshSetupInterface {\n  setGeometry(g: BufferGeometry): void\n  setMaterial(m: Material): void\n}\n\nexport interface MeshPublicInterface extends ComponentPublicInstance, MeshInterface {}\n\nexport const MeshInjectionKey: InjectionKey<MeshPublicInterface> = Symbol('Mesh')\n\nconst Mesh = defineComponent({\n  name: 'Mesh',\n  extends: Object3D,\n  props: {\n    castShadow: Boolean,\n    receiveShadow: Boolean,\n  },\n  setup(): MeshSetupInterface {\n    return {}\n  },\n  provide() {\n    return {\n      [MeshInjectionKey as symbol]: this,\n    }\n  },\n  mounted() {\n    // TODO : proper ?\n    if (!this.mesh && !this.loading) this.initMesh()\n  },\n  methods: {\n    initMesh() {\n      const mesh = new TMesh(this.geometry, this.material)\n\n      bindProp(this, 'castShadow', mesh)\n      bindProp(this, 'receiveShadow', mesh)\n\n      this.mesh = mesh\n      this.initObject3D(mesh)\n    },\n    createGeometry() {},\n    addGeometryWatchers(props: Readonly<ComponentPropsOptions>) {\n      Object.keys(props).forEach(prop => {\n        // @ts-ignore\n        watch(() => this[prop], () => {\n          this.refreshGeometry()\n        })\n      })\n    },\n    setGeometry(geometry: BufferGeometry) {\n      this.geometry = geometry\n      if (this.mesh) this.mesh.geometry = geometry\n    },\n    setMaterial(material: Material) {\n      this.material = material\n      if (this.mesh) this.mesh.material = material\n    },\n    refreshGeometry() {\n      const oldGeo = this.geometry\n      this.createGeometry()\n      if (this.mesh && this.geometry) this.mesh.geometry = this.geometry\n      oldGeo?.dispose()\n    },\n  },\n  unmounted() {\n    // for predefined mesh (geometry/material are not unmounted)\n    if (this.geometry) this.geometry.dispose()\n    if (this.material) this.material.dispose()\n  },\n  __hmrId: 'Mesh',\n})\n\nexport default Mesh\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function meshComponent<P extends Readonly<ComponentPropsOptions>>(\n  name: string,\n  props: P,\n  createGeometry: {(c: any): BufferGeometry}\n) {\n  // @ts-ignore\n  return defineComponent({\n    name,\n    extends: Mesh,\n    props,\n    created() {\n  // @ts-ignore\n  this.createGeometry()\n  // @ts-ignore\n  this.addGeometryWatchers(props)\n    },\n    methods: {\n      createGeometry() {\n  // @ts-ignore\n  this.geometry = createGeometry(this)\n      },\n    },\n  })\n}\n","import { ComponentPropsOptions, defineComponent, PropType, watch } from 'vue'\nimport { BufferAttribute, BufferGeometry, TypedArray } from 'three'\nimport { MeshInjectionKey, MeshInterface } from '../meshes/Mesh'\n\nexport interface GeometrySetupInterface {\n  mesh?: MeshInterface\n  geometry?: BufferGeometry\n  watchProps?: string[]\n}\n\nexport interface GeometryAttributeInterface {\n  name: string\n  array: ArrayLike<number>\n  itemSize: number\n  normalized?: boolean\n}\n\n// function defaultSetup(): GeometryInterface {\n//   const mesh = inject('mesh') as MeshInterface\n//   const watchProps: string[] = []\n//   return { mesh, watchProps }\n// }\n\nconst Geometry = defineComponent({\n  emits: ['created'],\n  props: {\n    rotateX: Number,\n    rotateY: Number,\n    rotateZ: Number,\n    attributes: { type: Array as PropType<Array<GeometryAttributeInterface>>, default: () => ([]) },\n  },\n  // inject for sub components\n  inject: {\n    mesh: MeshInjectionKey as symbol,\n  },\n  setup(): GeometrySetupInterface {\n    return {}\n  },\n  created() {\n    if (!this.mesh) {\n      console.error('Missing parent Mesh')\n      return\n    }\n\n    this.createGeometry()\n    this.rotateGeometry()\n    if (this.geometry) this.mesh.setGeometry(this.geometry)\n\n    Object.keys(this.$props).forEach(prop => {\n      // @ts-ignore\n      watch(() => this[prop], this.refreshGeometry)\n    })\n  },\n  unmounted() {\n    this.geometry?.dispose()\n  },\n  methods: {\n    createGeometry() {\n      const bufferAttributes: Record<string, unknown> = {}\n      const geometry = new BufferGeometry()\n      this.attributes.forEach(attribute => {\n        if (attribute.name && attribute.itemSize && attribute.array) {\n          const bufferAttribute = bufferAttributes[attribute.name] = new BufferAttribute(attribute.array as TypedArray, attribute.itemSize, attribute.normalized)\n          geometry.setAttribute(attribute.name, bufferAttribute)\n        }\n      })\n      geometry.computeBoundingBox()\n      geometry.userData.component = this\n      this.geometry = geometry\n      this.$emit('created', geometry)\n    },\n    rotateGeometry() {\n      if (!this.geometry) return\n      if (this.rotateX) this.geometry.rotateX(this.rotateX)\n      if (this.rotateY) this.geometry.rotateY(this.rotateY)\n      if (this.rotateZ) this.geometry.rotateZ(this.rotateZ)\n    },\n    refreshGeometry() {\n      const oldGeo = this.geometry\n      this.createGeometry()\n      this.rotateGeometry()\n      if (this.geometry && this.mesh) this.mesh.setGeometry(this.geometry)\n      oldGeo?.dispose()\n    },\n  },\n  render() { return [] },\n})\n\nexport default Geometry\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function geometryComponent<P extends Readonly<ComponentPropsOptions>>(\n  name: string,\n  props: P,\n  createGeometry: {(c: any): BufferGeometry}\n) {\n  // @ts-ignore\n  return defineComponent({\n    name,\n    extends: Geometry,\n    props,\n    methods: {\n      createGeometry() {\n  // @ts-ignore\n  this.geometry = createGeometry(this)\n  // @ts-ignore\n  this.geometry.userData.component = this\n  // @ts-ignore\n  this.$emit('created', this.geometry)\n      },\n    },\n  })\n}\n","import { geometryComponent } from './Geometry'\nimport { BoxGeometry } from 'three'\n\nexport const props = {\n  size: Number,\n  width: { type: Number, default: 1 },\n  height: { type: Number, default: 1 },\n  depth: { type: Number, default: 1 },\n  widthSegments: { type: Number, default: 1 },\n  heightSegments: { type: Number, default: 1 },\n  depthSegments: { type: Number, default: 1 },\n} as const\n\nexport function createGeometry(comp: any): BoxGeometry {\n  if (comp.size) {\n    return new BoxGeometry(comp.size, comp.size, comp.size, comp.widthSegments, comp.heightSegments, comp.depthSegments)\n  } else {\n    return new BoxGeometry(comp.width, comp.height, comp.depth, comp.widthSegments, comp.heightSegments, comp.depthSegments)\n  }\n}\n\nexport default geometryComponent('BoxGeometry', props, createGeometry)\n","import { geometryComponent } from './Geometry'\nimport { CircleGeometry } from 'three'\n\nexport const props = {\n  radius: { type: Number, default: 1 },\n  segments: { type: Number, default: 8 },\n  thetaStart: { type: Number, default: 0 },\n  thetaLength: { type: Number, default: Math.PI * 2 },\n} as const\n\nexport function createGeometry(comp: any): CircleGeometry {\n  return new CircleGeometry(comp.radius, comp.segments, comp.thetaStart, comp.thetaLength)\n}\n\nexport default geometryComponent('CircleGeometry', props, createGeometry)\n","import { geometryComponent } from './Geometry'\nimport { ConeGeometry } from 'three'\n\nexport const props = {\n  radius: { type: Number, default: 1 },\n  height: { type: Number, default: 1 },\n  radialSegments: { type: Number, default: 8 },\n  heightSegments: { type: Number, default: 1 },\n  openEnded: { type: Boolean, default: false },\n  thetaStart: { type: Number, default: 0 },\n  thetaLength: { type: Number, default: Math.PI * 2 },\n} as const\n\nexport function createGeometry(comp: any): ConeGeometry {\n  return new ConeGeometry(comp.radius, comp.height, comp.radialSegments, comp.heightSegments, comp.openEnded, comp.thetaStart, comp.thetaLength)\n}\n\nexport default geometryComponent('ConeGeometry', props, createGeometry)\n","import { geometryComponent } from './Geometry'\nimport { CylinderGeometry } from 'three'\n\nexport const props = {\n  radiusTop: { type: Number, default: 1 },\n  radiusBottom: { type: Number, default: 1 },\n  height: { type: Number, default: 1 },\n  radialSegments: { type: Number, default: 8 },\n  heightSegments: { type: Number, default: 1 },\n  openEnded: { type: Boolean, default: false },\n  thetaStart: { type: Number, default: 0 },\n  thetaLength: { type: Number, default: Math.PI * 2 },\n} as const\n\nexport function createGeometry(comp: any): CylinderGeometry {\n  return new CylinderGeometry(comp.radiusTop, comp.radiusBottom, comp.height, comp.radialSegments, comp.heightSegments, comp.openEnded, comp.thetaStart, comp.thetaLength)\n}\n\nexport default geometryComponent('CylinderGeometry', props, createGeometry)\n","import { geometryComponent } from './Geometry'\nimport { DodecahedronGeometry } from 'three'\n\nexport const props = {\n  radius: { type: Number, default: 1 },\n  detail: { type: Number, default: 0 },\n} as const\n\nexport function createGeometry(comp: any): DodecahedronGeometry {\n  return new DodecahedronGeometry(comp.radius, comp.detail)\n}\n\nexport default geometryComponent('DodecahedronGeometry', props, createGeometry)\n","import { PropType } from 'vue'\nimport { geometryComponent } from './Geometry'\nimport { ExtrudeGeometry, ExtrudeGeometryOptions, Shape, BufferGeometry, Vector3, BoxGeometry } from 'three'\nimport { mergeGeometries } from 'three/examples/jsm/utils/BufferGeometryUtils.js'\n\nexport const props = {\n    shapes: { type: [Object, Array] as PropType<Shape | Shape[]> },\n    options: { type: Object as PropType<ExtrudeGeometryOptions[] | ExtrudeGeometryOptions> },\n    positions: { type: Array as PropType<Vector3[] | null>, default: null },\n    rotations: { type: Array as PropType<Vector3[] | null>, default: null }\n} as const\n\nexport function createGeometry(comp: any): ExtrudeGeometry | BufferGeometry {\n    if (Array.isArray(comp.options) && Array.isArray(comp.shapes)) {\n\n        if (comp.shapes.length > 0) {\n            const geometries = comp.shapes.map((shape: Shape | Shape[], index: number) => {\n                const geometry = new ExtrudeGeometry(shape, comp.options[index])\n                if (comp.rotations) {\n                    if (comp.rotations[index].x != 0) geometry.rotateX(comp.rotations[index].x)\n                    if (comp.rotations[index].y != 0) geometry.rotateY(comp.rotations[index].y)\n                    if (comp.rotations[index].z != 0) geometry.rotateZ(comp.rotations[index].z)\n                }\n                if (comp.positions) {\n                    geometry.translate(comp.positions[index].x, comp.positions[index].y, comp.positions[index].z)\n                }\n                return geometry;\n            });\n\n            return mergeGeometries(geometries);\n        } else {\n            // this ensures mergeBufferGeometries wont fail, and the algorithm can still continue\n            console.warn(\"Empty shape array found in ExtrudeGeometry\")\n            const geometry =  new BoxGeometry(0.001, 0.001, 0.001);\n            geometry.translate(-1000,-1000,-1000)\n            return geometry\n        }\n    } else {\n        return new ExtrudeGeometry(comp.shapes, comp.options)\n    }\n}\n\nexport default geometryComponent('ExtrudeGeometry', props, createGeometry)\n","import { geometryComponent } from './Geometry'\nimport { IcosahedronGeometry } from 'three'\n\nexport const props = {\n  radius: { type: Number, default: 1 },\n  detail: { type: Number, default: 0 },\n} as const\n\nexport function createGeometry(comp: any): IcosahedronGeometry {\n  return new IcosahedronGeometry(comp.radius, comp.detail)\n}\n\nexport default geometryComponent('IcosahedronGeometry', props, createGeometry)\n","import { geometryComponent } from './Geometry'\nimport { LatheGeometry } from 'three'\n\nexport const props = {\n  points: Array,\n  segments: { type: Number, default: 12 },\n  phiStart: { type: Number, default: 0 },\n  phiLength: { type: Number, default: Math.PI * 2 },\n} as const\n\nexport function createGeometry(comp: any): LatheGeometry {\n  return new LatheGeometry(comp.points, comp.segments, comp.phiStart, comp.phiLength)\n}\n\nexport default geometryComponent('LatheGeometry', props, createGeometry)\n","import { geometryComponent } from './Geometry'\nimport { OctahedronGeometry } from 'three'\n\nexport const props = {\n  radius: { type: Number, default: 1 },\n  detail: { type: Number, default: 0 },\n} as const\n\nexport function createGeometry(comp: any): OctahedronGeometry {\n  return new OctahedronGeometry(comp.radius, comp.detail)\n}\n\nexport default geometryComponent('OctahedronGeometry', props, createGeometry)\n","import { geometryComponent } from './Geometry'\nimport { PlaneGeometry } from 'three'\n\nexport const props = {\n  width: { type: Number, default: 1 },\n  height: { type: Number, default: 1 },\n  widthSegments: { type: Number, default: 1 },\n  heightSegments: { type: Number, default: 1 },\n} as const\n\nexport function createGeometry(comp: any): PlaneGeometry {\n  return new PlaneGeometry(comp.width, comp.height, comp.widthSegments, comp.heightSegments)\n}\n\nexport default geometryComponent('PlaneGeometry', props, createGeometry)\n","import { geometryComponent } from './Geometry'\nimport { PolyhedronGeometry } from 'three'\n\nexport const props = {\n  vertices: Array,\n  indices: Array,\n  radius: { type: Number, default: 1 },\n  detail: { type: Number, default: 0 },\n} as const\n\nexport function createGeometry(comp: any): PolyhedronGeometry {\n  return new PolyhedronGeometry(comp.vertices, comp.indices, comp.radius, comp.detail)\n}\n\nexport default geometryComponent('PolyhedronGeometry', props, createGeometry)\n","import { geometryComponent } from './Geometry'\nimport { RingGeometry } from 'three'\n\nexport const props = {\n  innerRadius: { type: Number, default: 0.5 },\n  outerRadius: { type: Number, default: 1 },\n  thetaSegments: { type: Number, default: 8 },\n  phiSegments: { type: Number, default: 1 },\n  thetaStart: { type: Number, default: 0 },\n  thetaLength: { type: Number, default: Math.PI * 2 },\n} as const\n\nexport function createGeometry(comp: any): RingGeometry {\n  return new RingGeometry(comp.innerRadius, comp.outerRadius, comp.thetaSegments, comp.phiSegments, comp.thetaStart, comp.thetaLength)\n}\n\nexport default geometryComponent('RingGeometry', props, createGeometry)\n","import { geometryComponent } from './Geometry'\nimport { SphereGeometry } from 'three'\n\nexport const props = {\n  radius: { type: Number, default: 1 },\n  widthSegments: { type: Number, default: 12 },\n  heightSegments: { type: Number, default: 12 },\n  phiStart: { type: Number, default: 0 },\n  phiLength: { type: Number, default: Math.PI * 2 },\n  thetaStart: { type: Number, default: 0 },\n  thetaLength: { type: Number, default: Math.PI },\n} as const\n\nexport function createGeometry(comp: any): SphereGeometry {\n  return new SphereGeometry(comp.radius, comp.widthSegments, comp.heightSegments, comp.phiStart, comp.phiLength, comp.thetaStart, comp.thetaLength)\n}\n\nexport default geometryComponent('SphereGeometry', props, createGeometry)\n","import { PropType } from 'vue'\nimport { geometryComponent } from './Geometry'\nimport { Shape, ShapeGeometry } from 'three'\n\nexport const props = {\n  shapes: { type: [Object, Array] as PropType<Shape | Shape[]> },\n  curveSegments: { type: Number },\n} as const\n\nexport function createGeometry(comp: any): ShapeGeometry {\n  return new ShapeGeometry(comp.shapes, comp.curveSegments)\n}\n\nexport default geometryComponent('ShapeGeometry', props, createGeometry)\n","import { geometryComponent } from './Geometry'\nimport { TetrahedronGeometry } from 'three'\n\nexport const props = {\n  radius: { type: Number, default: 1 },\n  detail: { type: Number, default: 0 },\n} as const\n\nexport function createGeometry(comp: any): TetrahedronGeometry {\n  return new TetrahedronGeometry(comp.radius, comp.detail)\n}\n\nexport default geometryComponent('TetrahedronGeometry', props, createGeometry)\n","import { geometryComponent } from './Geometry'\nimport { TorusGeometry } from 'three'\n\nexport const props = {\n  radius: { type: Number, default: 1 },\n  tube: { type: Number, default: 0.4 },\n  radialSegments: { type: Number, default: 8 },\n  tubularSegments: { type: Number, default: 6 },\n  arc: { type: Number, default: Math.PI * 2 },\n} as const\n\nexport function createGeometry(comp: any): TorusGeometry {\n  return new TorusGeometry(comp.radius, comp.tube, comp.radialSegments, comp.tubularSegments, comp.arc)\n}\n\nexport default geometryComponent('TorusGeometry', props, createGeometry)\n","import { geometryComponent } from './Geometry'\nimport { TorusKnotGeometry } from 'three'\n\nexport const props = {\n  radius: { type: Number, default: 1 },\n  tube: { type: Number, default: 0.4 },\n  tubularSegments: { type: Number, default: 64 },\n  radialSegments: { type: Number, default: 8 },\n  p: { type: Number, default: 2 },\n  q: { type: Number, default: 3 },\n} as const\n\nexport function createGeometry(comp: any): TorusKnotGeometry {\n  return new TorusKnotGeometry(comp.radius, comp.tube, comp.tubularSegments, comp.radialSegments, comp.p, comp.q)\n}\n\nexport default geometryComponent('TorusKnotGeometry', props, createGeometry)\n","import { defineComponent } from 'vue'\nimport { CatmullRomCurve3, Curve, TubeGeometry, Vector3 } from 'three'\nimport Geometry from './Geometry'\n\nexport const props = {\n  points: Array,\n  path: Curve,\n  tubularSegments: { type: Number, default: 64 },\n  radius: { type: Number, default: 1 },\n  radialSegments: { type: Number, default: 8 },\n  closed: { type: Boolean, default: false },\n} as const\n\nexport function createGeometry(comp: any): TubeGeometry {\n  let curve\n  if (comp.points) {\n    curve = new CatmullRomCurve3(comp.points)\n  } else if (comp.path) {\n    curve = comp.path\n  } else {\n    console.error('Missing path curve or points.')\n  }\n  return new TubeGeometry(curve, comp.tubularSegments, comp.radius, comp.radiusSegments, comp.closed)\n}\n\nexport default defineComponent({\n  extends: Geometry,\n  props,\n  methods: {\n    createGeometry() {\n      this.geometry = createGeometry(this)\n    },\n    // update points (without using prop, faster)\n    updatePoints(points: Vector3[]) {\n      updateTubeGeometryPoints(this.geometry as TubeGeometry, points)\n    },\n  },\n})\n\nexport function updateTubeGeometryPoints(tube: TubeGeometry, points: Vector3[]): void {\n  const curve = new CatmullRomCurve3(points)\n  const { radialSegments, radius, tubularSegments, closed } = tube.parameters\n  const frames = curve.computeFrenetFrames(tubularSegments, closed)\n  tube.tangents = frames.tangents\n  tube.normals = frames.normals\n  tube.binormals = frames.binormals\n\n  // disabled this, readonly \n  // tube.parameters.path = curve\n\n  const pAttribute = tube.getAttribute('position')\n  const nAttribute = tube.getAttribute('normal')\n\n  const normal = new Vector3()\n  const P = new Vector3()\n\n  for (let i = 0; i < tubularSegments; i++) {\n    updateSegment(i)\n  }\n  updateSegment(tubularSegments)\n\n  tube.attributes.position.needsUpdate = true\n  tube.attributes.normal.needsUpdate = true\n\n  function updateSegment(i: number) {\n    curve.getPointAt(i / tubularSegments, P)\n    const N = frames.normals[i]\n    const B = frames.binormals[i]\n    for (let j = 0; j <= radialSegments; j++) {\n      const v = j / radialSegments * Math.PI * 2\n      const sin = Math.sin(v)\n      const cos = -Math.cos(v)\n      normal.x = (cos * N.x + sin * B.x)\n      normal.y = (cos * N.y + sin * B.y)\n      normal.z = (cos * N.z + sin * B.z)\n      normal.normalize()\n      const index = (i * (radialSegments + 1) + j)\n      nAttribute.setXYZ(index, normal.x, normal.y, normal.z)\n      pAttribute.setXYZ(index, P.x + radius * normal.x, P.y + radius * normal.y, P.z + radius * normal.z)\n    }\n  }\n}\n","import { DirectionalLight, Light, SpotLight } from 'three'\nimport { defineComponent, PropType, watch } from 'vue'\nimport Object3D, { Vector2PropInterface } from '../core/Object3D'\nimport { bindProp, setFromProp } from '../tools'\n\nexport interface LightSetupInterface {\n  light?: Light\n}\n\nexport default defineComponent({\n  extends: Object3D,\n  name: 'Light',\n  props: {\n    color: { type: String, default: '#ffffff' },\n    intensity: { type: Number, default: 1 },\n    castShadow: { type: Boolean, default: false },\n    shadowMapSize: { type: Object as PropType<Vector2PropInterface>, default: () => ({ x: 512, y: 512 }) },\n    shadowCamera: { type: Object, default: () => ({}) },\n  },\n  setup(): LightSetupInterface {\n    return {}\n  },\n  unmounted() {\n    if (this.light instanceof SpotLight || this.light instanceof DirectionalLight) {\n      this.removeFromParent(this.light.target)\n    }\n  },\n  methods: {\n    initLight(light: Light) {\n      this.light = light\n\n      if ((light as any).shadow) {\n        light.castShadow = this.castShadow\n        // @ts-ignore\n        setFromProp(light.shadow.mapSize, this.shadowMapSize)\n        // @ts-ignore\n        setFromProp(light.shadow.camera, this.shadowCamera)\n      }\n\n      ['color', 'intensity', 'castShadow'].forEach(p => {\n        // @ts-ignore\n        watch(() => this[p], (value) => {\n          if (p === 'color') {\n            light.color.set(value)\n          } else {\n            // @ts-ignore\n            light[p] = value\n          }\n        })\n      })\n\n      this.initObject3D(light)\n\n      if (light instanceof SpotLight || light instanceof DirectionalLight) {\n        bindProp(this, 'target', light.target, 'position')\n        this.addToParent(light.target)\n      }\n    },\n  },\n  __hmrId: 'Light',\n})\n","import { defineComponent } from 'vue'\nimport { AmbientLight } from 'three'\nimport Light from './Light'\n\nexport default defineComponent({\n  extends: Light,\n  created() {\n    this.initLight(new AmbientLight(this.color, this.intensity))\n  },\n  __hmrId: 'AmbientLight',\n})\n","import { defineComponent, PropType } from 'vue'\nimport { DirectionalLight } from 'three'\nimport { Vector3PropInterface } from '../core/Object3D'\nimport Light from './Light'\n\nexport default defineComponent({\n  extends: Light,\n  props: {\n    target: { type: Object as PropType<Vector3PropInterface>, default: () => ({ x: 0, y: 0, z: 0 }) },\n  },\n  created() {\n    this.initLight(new DirectionalLight(this.color, this.intensity))\n  },\n  __hmrId: 'DirectionalLight',\n})\n","import { defineComponent, watch } from 'vue'\nimport { HemisphereLight } from 'three'\nimport Light from './Light'\n\nexport default defineComponent({\n  extends: Light,\n  props: {\n    groundColor: { type: String, default: '#444444' },\n  },\n  created() {\n    const light = new HemisphereLight(this.color, this.groundColor, this.intensity)\n    watch(() => this.groundColor, (value) => { light.groundColor.set(value) })\n    this.initLight(light)\n  },\n  __hmrId: 'HemisphereLight',\n})\n","import { defineComponent } from 'vue'\nimport { PointLight } from 'three'\nimport Light from './Light'\n\nexport default defineComponent({\n  extends: Light,\n  props: {\n    distance: { type: Number, default: 0 },\n    decay: { type: Number, default: 1 },\n  },\n  created() {\n    this.initLight(new PointLight(this.color, this.intensity, this.distance, this.decay))\n  },\n  __hmrId: 'PointLight',\n})\n","import { defineComponent, watch } from 'vue'\nimport { RectAreaLight } from 'three'\nimport { RectAreaLightUniformsLib } from 'three/examples/jsm/lights/RectAreaLightUniformsLib.js'\nimport { RectAreaLightHelper } from 'three/examples/jsm/helpers/RectAreaLightHelper.js'\nimport Light from './Light'\n\nexport default defineComponent({\n  extends: Light,\n  props: {\n    width: { type: Number, default: 10 },\n    height: { type: Number, default: 10 },\n    helper: Boolean,\n  },\n  created() {\n    RectAreaLightUniformsLib.init()\n    const light = new RectAreaLight(this.color, this.intensity, this.width, this.height)\n\n    const watchProps = ['width', 'height']\n    watchProps.forEach(p => {\n      // @ts-ignore\n      watch(() => this[p], (value) => { light[p] = value })\n    })\n\n    if (this.helper) {\n      const lightHelper = new RectAreaLightHelper(light)\n      light.add(lightHelper)\n    }\n\n    this.initLight(light)\n  },\n  __hmrId: 'RectAreaLight',\n})\n","import { defineComponent, watch } from 'vue'\nimport { SpotLight } from 'three'\nimport Light from './Light'\n\nexport default defineComponent({\n  extends: Light,\n  props: {\n    angle: { type: Number, default: Math.PI / 3 },\n    decay: { type: Number, default: 1 },\n    distance: { type: Number, default: 0 },\n    penumbra: { type: Number, default: 0 },\n    target: Object,\n  },\n  created() {\n    const light = new SpotLight(this.color, this.intensity, this.distance, this.angle, this.penumbra, this.decay)\n\n    const watchProps = ['angle', 'decay', 'distance', 'penumbra']\n    watchProps.forEach(p => {\n      // @ts-ignore\n      watch(() => this[p], (value) => { light[p] = value })\n    })\n\n    this.initLight(light)\n  },\n  __hmrId: 'SpotLight',\n})\n","import { ComponentPropsOptions, ComponentPublicInstance, defineComponent, InjectionKey, PropType, watch } from 'vue'\nimport { Color, Material, MeshBasicMaterial, MeshLambertMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, PointsMaterial as TPointsMaterial, Texture, ShadowMaterial as TShadowMaterial } from 'three'\nimport { MeshInjectionKey, MeshInterface } from '../meshes/Mesh'\nimport { bindObjectProp, propsValues } from '../tools'\nimport { BasicMaterialPropsInterface, LambertMaterialPropsInterface, MaterialPropsInterface, PhongMaterialPropsInterface, PhysicalMaterialPropsInterface, PointsMaterialPropsInterface, StandardMaterialPropsInterface, ToonMaterialPropsInterface } from './types'\n\nexport interface MaterialSetupInterface {\n  mesh?: MeshInterface\n  material?: Material\n  createMaterial?(): Material\n}\n\nexport interface MaterialInterface extends MaterialSetupInterface {\n  setTexture(texture: Texture | null, key: string): void\n}\n\nexport interface MaterialPublicInterface extends ComponentPublicInstance, MaterialInterface {}\n\nexport const MaterialInjectionKey: InjectionKey<MaterialPublicInterface> = Symbol('Material')\n\nconst BaseMaterial = defineComponent({\n  emits: ['created'],\n  props: {\n    color: { type: String, default: '#ffffff' },\n    props: { type: Object as PropType<MaterialPropsInterface>, default: () => ({}) },\n  },\n  inject: {\n    mesh: MeshInjectionKey as symbol,\n  },\n  setup(): MaterialSetupInterface {\n    return {}\n  },\n  provide() {\n    return {\n      [MaterialInjectionKey as symbol]: this,\n    }\n  },\n  created() {\n    if (!this.mesh) {\n      console.error('Missing parent Mesh')\n      return\n    }\n\n    if (this.createMaterial) {\n      const material = this.material = this.createMaterial()\n      // @ts-ignore\n      watch(() => this.color, (value) => { material.color.set(value) })\n      bindObjectProp(this, 'props', material, false, this.setProp)\n      this.$emit('created', material)\n      this.mesh.setMaterial(material)\n    }\n  },\n  unmounted() {\n    this.material?.dispose()\n  },\n  methods: {\n    getMaterialParams() {\n      return { ...propsValues(this.$props, ['props']), ...this.props }\n    },\n    setProp(material: any, key: string, value: any, needsUpdate = false) {\n      const dstVal = material[key]\n      if (dstVal instanceof Color) dstVal.set(value)\n      else material[key] = value\n      material.needsUpdate = needsUpdate\n    },\n    setTexture(texture: Texture | null, key = 'map') {\n      this.setProp(this.material, key, texture, true)\n    },\n  },\n  render() {\n    return this.$slots.default ? this.$slots.default() : []\n  },\n  __hmrId: 'Material',\n})\n\nexport default BaseMaterial\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function materialComponent<P extends Readonly<ComponentPropsOptions>>(\n  name: string,\n  props: P,\n  createMaterial: {(opts: any): Material}\n) {\n  // @ts-ignore\n  return defineComponent({\n    name,\n    extends: BaseMaterial,\n    props,\n    methods: {\n  // @ts-ignore\n  createMaterial() {\n  // @ts-ignore\n  return createMaterial(this.getMaterialParams())\n      },\n    },\n  })\n}\n\n// TODO : proper\nexport const BasicMaterial = materialComponent('BasicMaterial', { props: { type: Object as PropType<BasicMaterialPropsInterface>, default: () => ({}) } }, (opts) => new MeshBasicMaterial(opts))\nexport const LambertMaterial = materialComponent('LambertMaterial', { props: { type: Object as PropType<LambertMaterialPropsInterface>, default: () => ({}) } }, (opts) => new MeshLambertMaterial(opts))\nexport const PhongMaterial = materialComponent('PhongMaterial', { props: { type: Object as PropType<PhongMaterialPropsInterface>, default: () => ({}) } }, (opts) => new MeshPhongMaterial(opts))\nexport const PhysicalMaterial = materialComponent('PhysicalMaterial', { props: { type: Object as PropType<PhysicalMaterialPropsInterface>, default: () => ({}) } }, (opts) => new MeshPhysicalMaterial(opts))\nexport const PointsMaterial = materialComponent('PointsMaterial', { props: { type: Object as PropType<PointsMaterialPropsInterface>, default: () => ({}) } }, (opts) => new TPointsMaterial(opts))\nexport const ShadowMaterial = materialComponent('ShadowMaterial', { color: { type: String, default: '#000000' }, props: { type: Object as PropType<MaterialPropsInterface>, default: () => ({}) } }, (opts) => new TShadowMaterial(opts))\nexport const StandardMaterial = materialComponent('StandardMaterial', { props: { type: Object as PropType<StandardMaterialPropsInterface>, default: () => ({}) } }, (opts) => new MeshStandardMaterial(opts))\nexport const ToonMaterial = materialComponent('ToonMaterial', { props: { type: Object as PropType<ToonMaterialPropsInterface>, default: () => ({}) } }, (opts) => new MeshToonMaterial(opts))\n","import { MeshMatcapMaterial, TextureLoader } from 'three'\nimport { propsValues, getMatcapUrl } from '../tools'\nimport { materialComponent } from './Material'\n\nexport default materialComponent(\n  'MatcapMaterial',\n  {\n    src: String,\n    name: { type: String, default: '0404E8_0404B5_0404CB_3333FC' },\n  },\n  (opts) => {\n    const src = opts.src ? opts.src : getMatcapUrl(opts.name)\n    const params = propsValues(opts, ['src', 'name'])\n    params.matcap = new TextureLoader().load(src)\n    return new MeshMatcapMaterial(params)\n  }\n)\n","import { ShaderMaterial } from 'three'\nimport { materialComponent } from './Material'\nimport { propsValues } from '../tools'\n\nconst defaultVertexShader = `\n  varying vec2 vUv;\n  void main(){\n    vUv = uv;\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position,1.0);\n  }\n`\n\nconst defaultFragmentShader = `\n  varying vec2 vUv;\n  void main() {\n    gl_FragColor = vec4(vUv.x, vUv.y, 0., 1.0);\n  }\n`\n\nexport default materialComponent(\n  'ShaderMaterial',\n  {\n    props: { type: Object, default: () => ({\n      uniforms: {},\n      vertexShader: defaultVertexShader,\n      fragmentShader: defaultFragmentShader,\n    }) },\n  },\n  (opts) => new ShaderMaterial(propsValues(opts, ['color']))\n)\n","/**\n * ------------------------------------------------------------------------------------------\n * Subsurface Scattering shader\n * Based on three/examples/jsm/shaders/SubsurfaceScatteringShader.js\n * Based on GDC 2011 – Approximating Translucency for a Fast, Cheap and Convincing Subsurface Scattering Look\n * https://colinbarrebrisebois.com/2011/03/07/gdc-2011-approximating-translucency-for-a-fast-cheap-and-convincing-subsurface-scattering-look/\n *------------------------------------------------------------------------------------------\n */\nimport {\n  Color,\n  ShaderChunk,\n  ShaderLib,\n  UniformsUtils,\n} from 'three'\n\nfunction replaceAll(string: string, find: string, replace: string) {\n  return string.split(find).join(replace)\n}\n\nconst meshphongFragHead = ShaderChunk.meshphong_frag.slice(0, ShaderChunk.meshphong_frag.indexOf('void main() {'))\nconst meshphongFragBody = ShaderChunk.meshphong_frag.slice(ShaderChunk.meshphong_frag.indexOf('void main() {'))\n\nconst SubsurfaceScatteringShader = {\n\n  uniforms: UniformsUtils.merge([\n    ShaderLib.phong.uniforms,\n    {\n      thicknessColor: { value: new Color(0xffffff) },\n      thicknessDistortion: { value: 0.1 },\n      thicknessAmbient: { value: 0.0 },\n      thicknessAttenuation: { value: 0.1 },\n      thicknessPower: { value: 2.0 },\n      thicknessScale: { value: 10.0 },\n    },\n  ]),\n\n  vertexShader: `\n    #define USE_UV\n    ${ShaderChunk.meshphong_vert}\n  `,\n\n  fragmentShader: `\n    #define USE_UV\n    #define SUBSURFACE\n\n    ${meshphongFragHead}\n\n    uniform float thicknessPower;\n    uniform float thicknessScale;\n    uniform float thicknessDistortion;\n    uniform float thicknessAmbient;\n    uniform float thicknessAttenuation;\n    uniform vec3 thicknessColor;\n\n    void RE_Direct_Scattering(const in IncidentLight directLight, const in vec2 uv, const in GeometricContext geometry, inout ReflectedLight reflectedLight) {\n      #ifdef USE_COLOR\n        vec3 thickness = vColor * thicknessColor;\n      #else\n        vec3 thickness = thicknessColor;\n      #endif\n      vec3 scatteringHalf = normalize(directLight.direction + (geometry.normal * thicknessDistortion));\n      float scatteringDot = pow(saturate(dot(geometry.viewDir, -scatteringHalf)), thicknessPower) * thicknessScale;\n      vec3 scatteringIllu = (scatteringDot + thicknessAmbient) * thickness;\n      reflectedLight.directDiffuse += scatteringIllu * thicknessAttenuation * directLight.color;\n    }\n  ` + meshphongFragBody.replace(\n    '#include <lights_fragment_begin>',\n    replaceAll(\n      ShaderChunk.lights_fragment_begin,\n      'RE_Direct( directLight, geometry, material, reflectedLight );',\n      `\n        RE_Direct( directLight, geometry, material, reflectedLight );\n        #if defined( SUBSURFACE ) && defined( USE_UV )\n          RE_Direct_Scattering(directLight, vUv, geometry, reflectedLight);\n        #endif\n      `\n    )\n  ),\n}\n\nexport default SubsurfaceScatteringShader\n","import { defineComponent, PropType } from 'vue'\nimport { Color, ShaderMaterial, ShaderMaterialParameters, UniformsUtils } from 'three'\nimport SubsurfaceScatteringShader from './SubsurfaceScatteringShader'\nimport Material from './Material'\nimport { bindObjectProp } from '../tools'\n\nexport interface SubSurfaceMaterialUniformsInterface {\n  diffuse?: string | number\n  thicknessColor?: string | number\n  thicknessDistortion?: number\n  thicknessAmbient?: number\n  thicknessAttenuation?: number\n  thicknessPower?: number\n  thicknessScale?: number\n}\n\nexport default defineComponent({\n  extends: Material,\n  props: {\n    uniforms: { type: Object as PropType<SubSurfaceMaterialUniformsInterface>, default: () => ({\n      diffuse: '#ffffff',\n      thicknessColor: '#ffffff',\n      thicknessDistortion: 0.4,\n      thicknessAmbient: 0.01,\n      thicknessAttenuation: 0.7,\n      thicknessPower: 2,\n      thicknessScale: 4,\n    }) },\n  },\n  methods: {\n    createMaterial() {\n      const params = SubsurfaceScatteringShader\n      const uniforms = UniformsUtils.clone(params.uniforms)\n\n      bindObjectProp(this, 'uniforms', uniforms, true, (dst: any, key: string, value: any) => {\n        const dstVal = dst[key].value\n        if (dstVal instanceof Color) dstVal.set(value)\n        else dst[key].value = value\n      })\n\n      const material = new ShaderMaterial({\n        ...params,\n        lights: true,\n        ...this.props,\n        uniforms,\n      } as ShaderMaterialParameters)\n\n      return material\n    },\n  },\n})\n","import { defineComponent, PropType, watch } from 'vue'\nimport { ShaderMaterial, Texture, TextureLoader } from 'three'\nimport { bindObjectProp } from '../tools'\nimport { MaterialInjectionKey, MaterialInterface } from './Material'\n\nexport interface TexureInterface {\n  material?: MaterialInterface\n  texture?: Texture\n}\n\nexport default defineComponent({\n  inject: {\n    material: MaterialInjectionKey as symbol,\n  },\n  props: {\n    name: { type: String, default: 'map' },\n    uniform: String,\n    src: String,\n    onLoad: Function as PropType<(t: Texture) => void>,\n    onProgress: Function as PropType<(e: ProgressEvent) => void>,\n    onError: Function as PropType<(e: unknown) => void>,\n    props: { type: Object, default: () => ({}) },\n  },\n  setup(): TexureInterface {\n    return {}\n  },\n  created() {\n    this.refreshTexture()\n    watch(() => this.src, this.refreshTexture)\n  },\n  unmounted() {\n    this.material?.setTexture(null, this.name)\n    this.texture?.dispose()\n  },\n  methods: {\n    createTexture() {\n      if (!this.src) return undefined\n      return new TextureLoader().load(this.src, this.onLoaded, this.onProgress, this.onError)\n    },\n    initTexture() {\n      if (!this.texture) return\n\n      bindObjectProp(this, 'props', this.texture)\n      if (!this.material) return\n\n      this.material.setTexture(this.texture, this.name)\n      if (this.material.material instanceof ShaderMaterial && this.uniform) {\n        (this.material.material).uniforms[this.uniform] = { value: this.texture }\n      }\n    },\n    refreshTexture() {\n      this.texture?.dispose()\n      this.texture = this.createTexture()\n      this.initTexture()\n    },\n    onLoaded(t: Texture) {\n      this.onLoad?.(t)\n    },\n  },\n  render() { return [] },\n})\n","import { defineComponent, PropType, watch } from 'vue'\nimport { CubeReflectionMapping, CubeTextureLoader } from 'three'\nimport Texture from './Texture'\n\nexport default defineComponent({\n  extends: Texture,\n  props: {\n    name: { type: String, default: 'envMap' },\n    path: { type: String, required: true },\n    urls: {\n      type: Array as PropType<string[]>,\n      default: () => ['px.jpg', 'nx.jpg', 'py.jpg', 'ny.jpg', 'pz.jpg', 'nz.jpg'],\n    },\n    props: { type: Object, default: () => ({ mapping: CubeReflectionMapping }) },\n  },\n  created() {\n    watch(() => this.path, this.refreshTexture)\n    watch(() => this.urls, this.refreshTexture)\n  },\n  methods: {\n    createTexture() {\n      return new CubeTextureLoader()\n        .setPath(this.path)\n        .load(this.urls, this.onLoaded, this.onProgress, this.onError)\n    },\n  },\n})\n","import { defineComponent, watch } from 'vue'\nimport { VideoTexture } from 'three'\nimport Texture from './Texture'\n\nexport default defineComponent({\n  extends: Texture,\n  props: {\n    videoId: {\n      type: String,\n      required: true,\n    },\n  },\n  created() {\n    watch(() => this.videoId, this.refreshTexture)\n  },\n  methods: {\n    createTexture() {\n      const video = document.getElementById(this.videoId) as HTMLVideoElement\n      return new VideoTexture(video)\n    },\n  },\n})\n","import { meshComponent } from './Mesh'\nimport { props, createGeometry } from '../geometries/BoxGeometry'\n\nexport default meshComponent('Box', props, createGeometry)\n\n// import { defineComponent } from 'vue'\n// import Mesh, { meshComponent } from './Mesh'\n//\n// export default defineComponent({\n//   extends: Mesh,\n//   props,\n//   created() {\n//     this.createGeometry()\n//     this.addGeometryWatchers(props)\n//   },\n//   methods: {\n//     createGeometry() {\n//       this.geometry = createGeometry(this)\n//     },\n//   },\n// })\n","import { meshComponent } from './Mesh'\nimport { props, createGeometry } from '../geometries/CircleGeometry'\n\nexport default meshComponent('Circle', props, createGeometry)\n","import { meshComponent } from './Mesh'\nimport { props, createGeometry } from '../geometries/ConeGeometry'\n\nexport default meshComponent('Cone', props, createGeometry)\n","import { meshComponent } from './Mesh'\nimport { props, createGeometry } from '../geometries/CylinderGeometry'\n\nexport default meshComponent('Cylinder', props, createGeometry)\n","import { meshComponent } from './Mesh'\nimport { props, createGeometry } from '../geometries/DodecahedronGeometry'\n\nexport default meshComponent('Dodecahedron', props, createGeometry)\n","import { meshComponent } from './Mesh'\nimport { props, createGeometry } from '../geometries/IcosahedronGeometry'\n\nexport default meshComponent('Icosahedron', props, createGeometry)\n","import { meshComponent } from './Mesh'\nimport { props, createGeometry } from '../geometries/LatheGeometry'\n\nexport default meshComponent('Lathe', props, createGeometry)\n","import { meshComponent } from './Mesh'\nimport { props, createGeometry } from '../geometries/OctahedronGeometry'\n\nexport default meshComponent('Octahedron', props, createGeometry)\n","import { meshComponent } from './Mesh'\nimport { props, createGeometry } from '../geometries/PlaneGeometry'\n\nexport default meshComponent('Plane', props, createGeometry)\n","import { meshComponent } from './Mesh'\nimport { props, createGeometry } from '../geometries/PolyhedronGeometry'\n\nexport default meshComponent('Polyhedron', props, createGeometry)\n","import { meshComponent } from './Mesh'\nimport { props, createGeometry } from '../geometries/RingGeometry'\n\nexport default meshComponent('Ring', props, createGeometry)\n","import { meshComponent } from './Mesh'\nimport { props, createGeometry } from '../geometries/SphereGeometry'\n\nexport default meshComponent('Sphere', props, createGeometry)\n","import { meshComponent } from './Mesh'\nimport { props, createGeometry } from '../geometries/TetrahedronGeometry'\n\nexport default meshComponent('Tetrahedron', props, createGeometry)\n","import { defineComponent, PropType, watch } from 'vue'\nimport { TextGeometry } from 'three/examples/jsm/geometries/TextGeometry.js'\nimport { Font, FontLoader } from 'three/examples/jsm/loaders/FontLoader.js'\nimport Mesh, { MeshSetupInterface } from './Mesh'\n\ninterface TextSetupInterface extends MeshSetupInterface {\n  geometry?: TextGeometry\n  font?: Font\n}\n\nconst props = {\n  text: { type: String, required: true, default: 'Text' },\n  fontSrc: { type: String, required: true },\n  size: { type: Number, default: 80 },\n  height: { type: Number, default: 5 },\n  depth: { type: Number, default: 1 },\n  curveSegments: { type: Number, default: 12 },\n  bevelEnabled: { type: Boolean, default: false },\n  bevelThickness: { type: Number, default: 10 },\n  bevelSize: { type: Number, default: 8 },\n  bevelOffset: { type: Number, default: 0 },\n  bevelSegments: { type: Number, default: 5 },\n  align: { type: [Boolean, String] as PropType<boolean | string>, default: false },\n} as const\n\nexport default defineComponent({\n  extends: Mesh,\n  props,\n  setup(): TextSetupInterface {\n    return {}\n  },\n  created() {\n    if (!this.fontSrc) {\n      console.error('Missing required prop: \"font-src\"')\n      return\n    }\n    // if (!this.text) {\n    //   console.error('Missing required prop: \"text\"')\n    //   return\n    // }\n\n    // add watchers\n    const watchProps = [\n      'text', 'size', 'height', 'curveSegments',\n      'bevelEnabled', 'bevelThickness', 'bevelSize', 'bevelOffset', 'bevelSegments',\n      'align',\n    ]\n    watchProps.forEach(p => {\n      // @ts-ignore\n      watch(() => this[p], () => {\n        if (this.font) this.refreshGeometry()\n      })\n    })\n\n    const loader = new FontLoader()\n    this.loading = true\n    loader.load(this.fontSrc, (font) => {\n      this.loading = false\n      this.font = font\n      this.createGeometry()\n      this.initMesh()\n    })\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = new TextGeometry(this.text, {\n        // @ts-ignore\n        font: this.font,\n        size: this.size,\n        height: this.height,\n        depth: this.depth,\n        curveSegments: this.curveSegments,\n        bevelEnabled: this.bevelEnabled,\n        bevelThickness: this.bevelThickness,\n        bevelSize: this.bevelSize,\n        bevelOffset: this.bevelOffset,\n        bevelSegments: this.bevelSegments,\n      })\n\n      if (this.align === 'center') {\n        this.geometry.center()\n      }\n    },\n  },\n})\n","import { meshComponent } from './Mesh'\nimport { props, createGeometry } from '../geometries/TorusGeometry'\n\nexport default meshComponent('Torus', props, createGeometry)\n","import { meshComponent } from './Mesh'\nimport { props, createGeometry } from '../geometries/TorusKnotGeometry'\n\nexport default meshComponent('TorusKnot', props, createGeometry)\n","import { ComponentPropsOptions, defineComponent } from 'vue'\nimport { TubeGeometry, Vector3 } from 'three'\nimport Mesh from './Mesh'\nimport { props, createGeometry, updateTubeGeometryPoints } from '../geometries/TubeGeometry'\n\nexport default defineComponent({\n  extends: Mesh,\n  props,\n  created() {\n    this.createGeometry()\n    this.addGeometryWatchers(props as Readonly<ComponentPropsOptions>)\n  },\n  methods: {\n    createGeometry() {\n      this.geometry = createGeometry(this)\n    },\n    // update curve points (without using prop, faster)\n    updatePoints(points: Vector3[]) {\n      updateTubeGeometryPoints(this.geometry as TubeGeometry, points)\n    },\n  },\n  __hmrId: 'Tube',\n})\n","import { defineComponent, watch } from 'vue'\nimport { DoubleSide, MeshBasicMaterial, PlaneGeometry, Texture, TextureLoader } from 'three'\nimport Mesh, { MeshSetupInterface } from './Mesh'\n\ninterface ImageSetupInterface extends MeshSetupInterface {\n  material?: MeshBasicMaterial\n  texture?: Texture\n}\n\nexport default defineComponent({\n  emits: ['loaded'],\n  extends: Mesh,\n  props: {\n    src: { type: String, required: true },\n    width: Number,\n    height: Number,\n    widthSegments: { type: Number, default: 1 },\n    heightSegments: { type: Number, default: 1 },\n    keepSize: Boolean,\n  },\n  setup(): ImageSetupInterface {\n    return {}\n  },\n  created() {\n    if (!this.renderer) return\n\n    this.geometry = new PlaneGeometry(1, 1, this.widthSegments, this.heightSegments)\n    this.material = new MeshBasicMaterial({ side: DoubleSide, map: this.loadTexture() })\n\n    watch(() => this.src, this.refreshTexture);\n\n    ['width', 'height'].forEach(p => {\n      // @ts-ignore\n      watch(() => this[p], this.resize)\n    })\n\n    this.resize()\n    if (this.keepSize) this.renderer.onResize(this.resize)\n  },\n  unmounted() {\n    this.renderer?.offResize(this.resize)\n  },\n  methods: {\n    loadTexture() {\n      return new TextureLoader().load(this.src, this.onLoaded)\n    },\n    refreshTexture() {\n      this.texture?.dispose()\n      if (this.material) {\n        this.material.map = this.loadTexture()\n        this.material.needsUpdate = true\n      }\n    },\n    onLoaded(texture: Texture) {\n      this.texture = texture\n      this.resize()\n      this.$emit('loaded', texture)\n    },\n    resize() {\n      if (!this.renderer || !this.texture) return\n      const screen = this.renderer.size\n      const iW = this.texture.image.width\n      const iH = this.texture.image.height\n      const iRatio = iW / iH\n      let w = 1, h = 1\n      if (this.width && this.height) {\n        w = this.width * screen.wWidth / screen.width\n        h = this.height * screen.wHeight / screen.height\n      } else if (this.width) {\n        w = this.width * screen.wWidth / screen.width\n        h = w / iRatio\n      } else if (this.height) {\n        h = this.height * screen.wHeight / screen.height\n        w = h * iRatio\n      } else {\n        if (iRatio > 1) w = h * iRatio\n        else h = w / iRatio\n      }\n      if (this.mesh) {\n        this.mesh.scale.x = w\n        this.mesh.scale.y = h\n      }\n    },\n  },\n  __hmrId: 'Image',\n})\n","import { defineComponent } from 'vue'\nimport { InstancedMesh } from 'three'\nimport Mesh from './Mesh'\nimport { bindProp } from '../tools'\n\nexport default defineComponent({\n  extends: Mesh,\n  props: {\n    count: { type: Number, required: true },\n  },\n  methods: {\n    initMesh() {\n      if (!this.renderer) return\n\n      if (!this.geometry || !this.material) {\n        console.error('Missing geometry and/or material')\n        return false\n      }\n\n      this.mesh = new InstancedMesh(this.geometry, this.material, this.count)\n      this.mesh.userData.component = this\n\n      bindProp(this, 'castShadow', this.mesh)\n      bindProp(this, 'receiveShadow', this.mesh)\n\n      if (this.onPointerEnter ||\n        this.onPointerOver ||\n        this.onPointerMove ||\n        this.onPointerLeave ||\n        this.onPointerDown ||\n        this.onPointerUp ||\n        this.onClick) {\n        this.renderer.three.addIntersectObject(this.mesh)\n      }\n\n      this.initObject3D(this.mesh)\n    },\n  },\n  __hmrId: 'InstancedMesh',\n})\n","import { defineComponent } from 'vue'\nimport { Sprite, SpriteMaterial, Texture, TextureLoader, TypedArray } from 'three'\nimport Object3D, { Object3DSetupInterface } from '../core/Object3D'\n\ninterface SpriteSetupInterface extends Object3DSetupInterface {\n  texture?: Texture\n  material?: SpriteMaterial\n  sprite?: Sprite\n}\n\nexport default defineComponent({\n  extends: Object3D,\n  emits: ['loaded'],\n  props: {\n    src: { type: String, required: true },\n  },\n  setup(): SpriteSetupInterface {\n    return {}\n  },\n  created() {\n    this.texture = new TextureLoader().load(this.src, this.onLoaded)\n    this.material = new SpriteMaterial({ map: this.texture })\n    this.sprite = new Sprite(this.material)\n    this.initObject3D(this.sprite)\n  },\n  unmounted() {\n    this.texture?.dispose()\n    this.material?.dispose()\n  },\n  methods: {\n    onLoaded() {\n      this.updateUV()\n      this.$emit('loaded')\n    },\n    updateUV() {\n      if (!this.texture || !this.sprite) return\n\n      const iWidth = this.texture.image.width\n      const iHeight = this.texture.image.height\n      const iRatio = iWidth / iHeight\n\n      let x = 0.5, y = 0.5\n      if (iRatio > 1) {\n        x = 0.5 * iRatio\n      } else {\n        y = 0.5 / iRatio\n      }\n\n      const positions = this.sprite.geometry.attributes.position.array\n      positions[0] = -x; positions[1] = -y\n      positions[5] = x; positions[6] = -y\n      positions[10] = x; positions[11] = y\n      positions[15] = -x; positions[16] = y\n      this.sprite.geometry.attributes.position.needsUpdate = true\n    },\n  },\n  __hmrId: 'Sprite',\n})\n","import { defineComponent } from 'vue'\nimport { BufferGeometry, Material, Points } from 'three'\nimport Object3D, { Object3DSetupInterface } from '../core/Object3D'\nimport { MeshInjectionKey } from './Mesh'\n\nexport interface PointsSetupInterface extends Object3DSetupInterface {\n  mesh?: Points\n  points?: Points\n  geometry?: BufferGeometry\n  material?: Material\n}\n\nexport interface PointsInterface extends PointsSetupInterface {\n  setGeometry(geometry: BufferGeometry): void\n  setMaterial(material: Material): void\n}\n\n// not really a mesh, but allow us to easily get geometry/material support\nexport default defineComponent({\n  extends: Object3D,\n  setup(): PointsSetupInterface {\n    return {}\n  },\n  provide() {\n    return {\n      [MeshInjectionKey as symbol]: this,\n    }\n  },\n  mounted() {\n    this.mesh = this.points = new Points(this.geometry, this.material)\n    this.initObject3D(this.mesh)\n  },\n  methods: {\n    setGeometry(geometry: BufferGeometry) {\n      this.geometry = geometry\n      if (this.mesh) this.mesh.geometry = geometry\n    },\n    setMaterial(material: Material) {\n      this.material = material\n      if (this.mesh) this.mesh.material = material\n    },\n  },\n})\n","import { Object3D as TObject3D } from 'three'\nimport { defineComponent } from 'vue'\nimport Object3D from '../core/Object3D'\n\nexport default defineComponent({\n  extends: Object3D,\n  emits: ['before-load', 'load', 'progress', 'error'],\n  props: {\n    src: { type: String, required: true },\n  },\n  data() {\n    return {\n      progress: 0,\n    }\n  },\n  methods: {\n    onLoad(model: TObject3D) {\n      this.$emit('load', model)\n    },\n    onProgress(progress: ProgressEvent) {\n      this.progress = progress.loaded / progress.total\n      this.$emit('progress', progress)\n    },\n    onError(error: ErrorEvent) {\n      this.$emit('error', error)\n    },\n  },\n})\n","import { defineComponent } from 'vue'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js'\nimport Model from './Model'\n\nexport default defineComponent({\n  extends: Model,\n  created() {\n    const loader = new GLTFLoader()\n    this.$emit('before-load', loader)\n    loader.load(this.src, (gltf) => {\n      this.onLoad(gltf)\n      this.initObject3D(gltf.scene)\n    }, this.onProgress, this.onError)\n  },\n})\n","import { defineComponent } from 'vue'\nimport { FBXLoader } from 'three/examples/jsm/loaders/FBXLoader.js'\nimport Model from './Model'\n\nexport default defineComponent({\n  extends: Model,\n  created() {\n    const loader = new FBXLoader()\n    this.$emit('before-load', loader)\n    loader.load(this.src, (fbx) => {\n      this.onLoad(fbx)\n      this.initObject3D(fbx)\n    }, this.onProgress, this.onError)\n  },\n})\n","import { defineComponent, inject, InjectionKey } from 'vue'\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer.js'\nimport { Pass } from 'three/examples/jsm/postprocessing/Pass'\nimport { RendererInjectionKey, RendererInterface } from '../core/Renderer'\n\ninterface EffectComposerSetupInterface {\n  renderer?: RendererInterface\n  composer?: EffectComposer\n}\n\nexport interface EffectComposerInterface extends EffectComposerSetupInterface {\n  addPass(pass: Pass): void\n  removePass(pass: Pass): void\n}\n\nexport const ComposerInjectionKey: InjectionKey<EffectComposerInterface> = Symbol('Composer')\n\nexport default defineComponent({\n  setup(): EffectComposerSetupInterface {\n    const renderer = inject(RendererInjectionKey)\n    return { renderer }\n  },\n  provide() {\n    return {\n      [ComposerInjectionKey as symbol]: this,\n    }\n  },\n  created() {\n    if (!this.renderer) {\n      console.error('Renderer not found')\n      return\n    }\n    const renderer = this.renderer\n\n    const composer = new EffectComposer(this.renderer.renderer)\n    this.composer = composer\n    this.renderer.composer = composer\n\n    // this.renderer.onInit(() => {\n    renderer.addListener('init', () => {\n      renderer.renderer.autoClear = false\n      this.resize()\n      renderer.addListener('resize', this.resize)\n    })\n  },\n  unmounted() {\n    this.renderer?.removeListener('resize', this.resize)\n  },\n  methods: {\n    addPass(pass: Pass) {\n      this.composer?.addPass(pass)\n    },\n    removePass(pass: Pass) {\n      this.composer?.removePass(pass)\n    },\n    resize() {\n      if (this.composer && this.renderer) {\n        this.composer.setSize(this.renderer.size.width, this.renderer.size.height)\n      }\n    },\n  },\n  render() {\n    return this.$slots.default ? this.$slots.default() : []\n  },\n  __hmrId: 'EffectComposer',\n})\n","import { Pass } from 'three/examples/jsm/postprocessing/Pass'\nimport { defineComponent } from 'vue'\nimport { RendererInjectionKey, RendererInterface } from '../core/Renderer'\nimport { ComposerInjectionKey, EffectComposerInterface } from './EffectComposer'\n\nexport interface EffectSetupInterface {\n  renderer?: RendererInterface\n  composer?: EffectComposerInterface\n  pass?: Pass\n}\n\nexport default defineComponent({\n  // inject for sub components\n  inject: {\n    renderer: RendererInjectionKey as symbol,\n    composer: ComposerInjectionKey as symbol,\n  },\n  emits: ['ready'],\n  setup(): EffectSetupInterface {\n    return {}\n  },\n  created() {\n    if (!this.composer) {\n      console.error('Missing parent EffectComposer')\n    }\n    if (!this.renderer) {\n      console.error('Missing parent Renderer')\n    }\n  },\n  unmounted() {\n    if (this.pass) {\n      this.composer?.removePass(this.pass);\n      (this.pass as any).dispose?.()\n    }\n  },\n  methods: {\n    initEffectPass(pass: Pass) {\n      this.pass = pass\n      this.composer?.addPass(pass)\n      this.$emit('ready', pass)\n    },\n  },\n  render() {\n    return []\n  },\n  __hmrId: 'EffectPass',\n})\n","import { defineComponent } from 'vue'\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass.js'\nimport EffectPass from './EffectPass'\n\nexport default defineComponent({\n  extends: EffectPass,\n  created() {\n    if (!this.renderer) return\n\n    if (!this.renderer.scene) {\n      console.error('Missing Scene')\n      return\n    }\n    if (!this.renderer.camera) {\n      console.error('Missing Camera')\n      return\n    }\n    const pass = new RenderPass(this.renderer.scene, this.renderer.camera)\n    this.initEffectPass(pass)\n  },\n  __hmrId: 'RenderPass',\n})\n","import { defineComponent, watch } from 'vue'\nimport { BokehPass } from 'three/examples/jsm/postprocessing/BokehPass.js'\nimport EffectPass from './EffectPass'\n\nconst props = {\n  focus: { type: Number, default: 1 },\n  aperture: { type: Number, default: 0.025 },\n  maxblur: { type: Number, default: 0.01 },\n} as const\n\nexport default defineComponent({\n  extends: EffectPass,\n  props,\n  created() {\n    if (!this.renderer) return\n\n    if (!this.renderer.scene) {\n      console.error('Missing Scene')\n      return\n    }\n    if (!this.renderer.camera) {\n      console.error('Missing Camera')\n      return\n    }\n\n    const params = {\n      focus: this.focus,\n      aperture: this.aperture,\n      maxblur: this.maxblur,\n      width: this.renderer.size.width,\n      height: this.renderer.size.height,\n    }\n\n    const pass = new BokehPass(this.renderer.scene, this.renderer.camera, params)\n\n    Object.keys(props).forEach(p => {\n      // @ts-ignore\n      watch(() => this[p], (value) => { pass.uniforms[p].value = value })\n    })\n\n    this.initEffectPass(pass)\n  },\n  __hmrId: 'BokehPass',\n})\n","import { defineComponent, watch } from 'vue'\nimport { FilmPass } from 'three/examples/jsm/postprocessing/FilmPass.js'\nimport EffectPass from './EffectPass'\n\nconst props = {\n  noiseIntensity: { type: Number, default: 0.5 },\n  scanlinesIntensity: { type: Number, default: 0.05 },\n  scanlinesCount: { type: Number, default: 4096 },\n  grayscale: { type: Number, default: 0 },\n} as const\n\nexport default defineComponent({\n  extends: EffectPass,\n  props,\n  created() {\n    const pass = new FilmPass()\n\n    Object.keys(props).forEach(p => {\n      // @ts-ignore\n      watch(() => this[p], (value) => { pass.uniforms[p].value = value })\n    })\n\n    this.initEffectPass(pass)\n  },\n  __hmrId: 'FilmPass',\n})\n","import { defineComponent } from 'vue'\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js'\nimport { FXAAShader } from 'three/examples/jsm/shaders/FXAAShader.js'\nimport EffectPass from './EffectPass'\nimport { SizeInterface } from '../core/useThree'\n\nexport default defineComponent({\n  extends: EffectPass,\n  created() {\n    const pass = new ShaderPass(FXAAShader)\n\n    // resize will be first called in renderer init\n    this.renderer?.addListener('resize', this.resize)\n\n    this.initEffectPass(pass)\n  },\n  unmounted() {\n    this.renderer?.removeListener('resize', this.resize)\n  },\n  methods: {\n    resize({ size }: { size: SizeInterface }) {\n      if (this.pass) {\n        const { resolution } = (this.pass as ShaderPass).material.uniforms\n        resolution.value.x = 1 / size.width\n        resolution.value.y = 1 / size.height\n      }\n    },\n  },\n  __hmrId: 'FXAAPass',\n})\n","import { defineComponent, watch } from 'vue'\nimport { HalftonePass } from 'three/examples/jsm/postprocessing/HalftonePass.js'\nimport EffectPass from './EffectPass'\n\nconst props = {\n  shape: { type: Number, default: 1 },\n  radius: { type: Number, default: 4 },\n  rotateR: { type: Number, default: Math.PI / 12 * 1 },\n  rotateG: { type: Number, default: Math.PI / 12 * 2 },\n  rotateB: { type: Number, default: Math.PI / 12 * 3 },\n  scatter: { type: Number, default: 0 },\n} as const\n\nexport default defineComponent({\n  extends: EffectPass,\n  props,\n  created() {\n    if (!this.renderer) return\n\n    const pass = new HalftonePass({})\n    pass.setSize(this.renderer.size.width, this.renderer.size.height)\n\n    Object.keys(props).forEach(p => {\n      // @ts-ignore\n      pass.uniforms[p].value = this[p]\n      // @ts-ignore\n      watch(() => this[p], (value) => { pass.uniforms[p].value = value })\n    })\n\n    this.initEffectPass(pass)\n  },\n  __hmrId: 'HalftonePass',\n})\n","import { defineComponent } from 'vue'\nimport { SMAAPass } from 'three/examples/jsm/postprocessing/SMAAPass.js'\nimport EffectPass from './EffectPass'\n\nexport default defineComponent({\n  extends: EffectPass,\n  created() {\n    if (!this.renderer) return\n\n    const pass = new SMAAPass()\n    pass.setSize(this.renderer.size.width, this.renderer.size.height)\n    this.initEffectPass(pass)\n  },\n  __hmrId: 'SMAAPass',\n})\n","import { defineComponent } from 'vue'\nimport { SSAOPass } from 'three/examples/jsm/postprocessing/SSAOPass.js'\nimport EffectPass from './EffectPass'\n\nexport default defineComponent({\n  extends: EffectPass,\n  props: {\n    options: {\n      type: Object,\n      default: () => ({}),\n    },\n  },\n  created() {\n    if (!this.renderer) return\n\n    if (!this.renderer.scene) {\n      console.error('Missing Scene')\n      return\n    }\n    if (!this.renderer.camera) {\n      console.error('Missing Camera')\n      return\n    }\n\n    const pass = new SSAOPass(\n      this.renderer.scene,\n      this.renderer.camera,\n      this.renderer.size.width,\n      this.renderer.size.height\n    )\n\n    Object.keys(this.options).forEach(key => {\n      // @ts-ignore\n      pass[key] = this.options[key]\n    })\n\n    this.initEffectPass(pass)\n  },\n  __hmrId: 'SSAOPass',\n})\n","export default {\n  uniforms: {},\n  vertexShader: `\n    varying vec2 vUv;\n    void main() {\n      vUv = uv;\n      gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n    }\n  `,\n  fragmentShader: `\n    varying vec2 vUv;\n    void main() {\n      gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\n    }\n  `,\n}\n","// From https://github.com/evanw/glfx.js\nimport { Vector2 } from 'three'\nimport DefaultShader from './default'\n\nexport default {\n  uniforms: {\n    tDiffuse: { value: null },\n    blurRadius: { value: 0 },\n    gradientRadius: { value: 0 },\n    start: { value: new Vector2() },\n    end: { value: new Vector2() },\n    delta: { value: new Vector2() },\n    texSize: { value: new Vector2() },\n  },\n  vertexShader: DefaultShader.vertexShader,\n  fragmentShader: `\n    uniform sampler2D tDiffuse;\n    uniform float blurRadius;\n    uniform float gradientRadius;\n    uniform vec2 start;\n    uniform vec2 end;\n    uniform vec2 delta;\n    uniform vec2 texSize;\n    varying vec2 vUv;\n\n    float random(vec3 scale, float seed) {\n      /* use the fragment position for a different seed per-pixel */\n      return fract(sin(dot(gl_FragCoord.xyz + seed, scale)) * 43758.5453 + seed);\n    }\n\n    void main() {\n      vec4 color = vec4(0.0);\n      float total = 0.0;\n\n      /* randomize the lookup values to hide the fixed number of samples */\n      float offset = random(vec3(12.9898, 78.233, 151.7182), 0.0);\n\n      vec2 normal = normalize(vec2(start.y - end.y, end.x - start.x));\n      float radius = smoothstep(0.0, 1.0, abs(dot(vUv * texSize - start, normal)) / gradientRadius) * blurRadius;\n      for (float t = -30.0; t <= 30.0; t++) {\n          float percent = (t + offset - 0.5) / 30.0;\n          float weight = 1.0 - abs(percent);\n          vec4 texel = texture2D(tDiffuse, vUv + delta / texSize * percent * radius);\n          // vec4 texel2 = texture2D(tDiffuse, vUv + vec2(-delta.y, delta.x) / texSize * percent * radius);\n\n          /* switch to pre-multiplied alpha to correctly blur transparent images */\n          texel.rgb *= texel.a;\n          // texel2.rgb *= texel2.a;\n\n          color += texel * weight;\n          total += 2.0 * weight;\n      }\n\n      gl_FragColor = color / total;\n\n      /* switch back from pre-multiplied alpha */\n      gl_FragColor.rgb /= gl_FragColor.a + 0.00001;\n    }\n  `,\n}\n","import { defineComponent, PropType, watch } from 'vue'\nimport { Vector2 } from 'three'\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js'\nimport EffectPass from './EffectPass'\nimport TiltShift from '../shaders/TiltShift'\nimport { Vector2PropInterface } from '../core/Object3D'\nimport { bindProp } from '../tools'\n\nconst props = {\n  blurRadius: { type: Number, default: 10 },\n  gradientRadius: { type: Number, default: 100 },\n  start: { type: Object as PropType<Vector2PropInterface>, default: () => ({ x: 0, y: 100 }) },\n  end: { type: Object as PropType<Vector2PropInterface>, default: () => ({ x: 10, y: 100 }) },\n} as const\n\ninterface TiltShiftPassSetupInterface {\n  uniforms1: {[name: string]: { value: any }}\n  uniforms2: {[name: string]: { value: any }}\n  pass1?: ShaderPass\n  pass2?: ShaderPass\n}\n\nexport default defineComponent({\n  extends: EffectPass,\n  props,\n  setup(): TiltShiftPassSetupInterface {\n    return { uniforms1: {}, uniforms2: {} }\n  },\n  created() {\n    if (!this.composer) return\n\n    this.pass1 = new ShaderPass(TiltShift)\n    this.pass2 = new ShaderPass(TiltShift)\n\n    const uniforms1 = this.uniforms1 = this.pass1.uniforms\n    const uniforms2 = this.uniforms2 = this.pass2.uniforms\n\n    // shared uniforms\n    uniforms2.blurRadius = uniforms1.blurRadius\n    uniforms2.gradientRadius = uniforms1.gradientRadius\n    uniforms2.start = uniforms1.start\n    uniforms2.end = uniforms1.end\n    uniforms2.texSize = uniforms1.texSize\n\n    bindProp(this, 'blurRadius', uniforms1.blurRadius, 'value')\n    bindProp(this, 'gradientRadius', uniforms1.gradientRadius, 'value')\n\n    this.updateFocusLine();\n\n    ['start', 'end'].forEach(p => {\n      // @ts-ignore\n      watch(() => this[p], this.updateFocusLine, { deep: true })\n    })\n\n    this.pass1.setSize = (width: number, height: number) => {\n      uniforms1.texSize.value.set(width, height)\n    }\n\n    this.initEffectPass(this.pass1)\n    this.composer.addPass(this.pass2)\n  },\n  unmounted() {\n    if (this.composer && this.pass2) this.composer.removePass(this.pass2)\n  },\n  methods: {\n    updateFocusLine() {\n      this.uniforms1.start.value.copy(this.start)\n      this.uniforms1.end.value.copy(this.end)\n      const dv = new Vector2().copy(this.end as Vector2).sub(this.start as Vector2).normalize()\n      this.uniforms1.delta.value.copy(dv)\n      this.uniforms2.delta.value.set(-dv.y, dv.x)\n    },\n  },\n  __hmrId: 'TiltShiftPass',\n})\n","import { defineComponent, watch } from 'vue'\nimport { Vector2 } from 'three'\nimport { UnrealBloomPass } from 'three/examples/jsm/postprocessing/UnrealBloomPass.js'\nimport EffectPass from './EffectPass'\n\nconst props = {\n  strength: { type: Number, default: 1.5 },\n  radius: { type: Number, default: 0 },\n  threshold: { type: Number, default: 0 },\n} as const\n\nexport default defineComponent({\n  extends: EffectPass,\n  props,\n  created() {\n    if (!this.renderer) return\n\n    const size = new Vector2(this.renderer.size.width, this.renderer.size.height)\n    const pass = new UnrealBloomPass(size, this.strength, this.radius, this.threshold)\n\n    Object.keys(props).forEach(p => {\n      // @ts-ignore\n      watch(() => this[p], (value) => { pass.uniforms[p].value = value })\n    })\n\n    this.initEffectPass(pass)\n  },\n  __hmrId: 'UnrealBloomPass',\n})\n","// From https://github.com/evanw/glfx.js\nimport { Vector2 } from 'three'\nimport DefaultShader from './default'\n\nexport default {\n  uniforms: {\n    tDiffuse: { value: null },\n    center: { value: new Vector2(0.5, 0.5) },\n    strength: { value: 0 },\n  },\n  vertexShader: DefaultShader.vertexShader,\n  fragmentShader: `\n    uniform sampler2D tDiffuse;\n    uniform vec2 center;\n    uniform float strength;\n    varying vec2 vUv;\n\n    float random(vec3 scale, float seed) {\n      /* use the fragment position for a different seed per-pixel */\n      return fract(sin(dot(gl_FragCoord.xyz + seed, scale)) * 43758.5453 + seed);\n    }\n    \n    void main() {\n      vec4 color = vec4(0.0);\n      float total = 0.0;\n      vec2 toCenter = center - vUv;\n      \n      /* randomize the lookup values to hide the fixed number of samples */\n      float offset = random(vec3(12.9898, 78.233, 151.7182), 0.0);\n      \n      for (float t = 0.0; t <= 40.0; t++) {\n        float percent = (t + offset) / 40.0;\n        float weight = 4.0 * (percent - percent * percent);\n        vec4 texel = texture2D(tDiffuse, vUv + toCenter * percent * strength);\n\n        /* switch to pre-multiplied alpha to correctly blur transparent images */\n        texel.rgb *= texel.a;\n\n        color += texel * weight;\n        total += weight;\n      }\n\n      gl_FragColor = color / total;\n\n      /* switch back from pre-multiplied alpha */\n      gl_FragColor.rgb /= gl_FragColor.a + 0.00001;\n    }\n  `,\n}\n","import { defineComponent, PropType } from 'vue'\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass.js'\nimport EffectPass from './EffectPass'\nimport ZoomBlur from '../shaders/ZoomBlur'\nimport { Vector2PropInterface } from '../core/Object3D'\nimport { bindProp } from '../tools'\n\nexport default defineComponent({\n  extends: EffectPass,\n  props: {\n    center: { type: Object as PropType<Vector2PropInterface>, default: () => ({ x: 0.5, y: 0.5 }) },\n    strength: { type: Number, default: 0.5 },\n  },\n  created() {\n    const pass = new ShaderPass(ZoomBlur)\n\n    bindProp(this, 'center', pass.uniforms.center, 'value')\n    bindProp(this, 'strength', pass.uniforms.strength, 'value')\n\n    this.initEffectPass(pass)\n  },\n  __hmrId: 'ZoomBlurPass',\n})\n","import { defineComponent, watch } from 'vue'\nimport { GridHelper as TGridHelper } from 'three'\nimport Object3D from '../core/Object3D'\nimport type { Object3DSetupInterface } from '../core/Object3D'\nimport { bindProp } from '../tools'\n\nexport interface MeshSetupInterface extends Object3DSetupInterface {\n    helper?: TGridHelper\n}\n\nconst props = {\n    size: { type: Number, required: true, default: 100 },\n    divisions: { type: Number, required: true, default: 10 },\n    color1: { type: Number },\n    color2: { type: Number },\n}\n\nexport default defineComponent({\n    extends: Object3D,\n    name: \"GridHelper\",\n    props,\n    setup(): MeshSetupInterface {\n        return {}\n    },\n    mounted() {\n        if (!this.helper) this.initHelper()\n\n        // add watchers\n        const watchProps = ['size', 'divisions', 'color1', 'color2']\n        watchProps.forEach(p => {\n            // @ts-ignore\n            watch(() => this[p], () => {\n                this.refreshHelper()\n            })\n        })\n    },\n    unmounted() {\n        this.destroyHelper();\n    },\n    methods: {\n        initHelper() {\n            this.helper = new TGridHelper(this.size, this.divisions, this.color1, this.color2);\n\n            bindProp(this, 'castShadow', this.helper)\n            bindProp(this, 'receiveShadow', this.helper)\n\n            this.initObject3D(this.helper)\n        },\n        destroyHelper() {\n            if (this.helper) this.removeFromParent(this.helper)\n            // @ts-ignore\n            this.getParent()?.remove(this.helper)\n            // @ts-ignore\n            this.helper?.dispose();\n        },\n        refreshHelper() {\n            this.destroyHelper();\n            this.initHelper();\n        },\n    }\n})\n","import { App, createApp as _createApp } from 'vue'\nimport * as TROIS from './index'\n\nexport const TroisJSVuePlugin = {\n  install(app: App): void {\n    const comps = [\n      'Camera',\n      'OrthographicCamera',\n      'PerspectiveCamera',\n      'Raycaster',\n      'Renderer',\n      'Scene',\n      'Group',\n\n      'CubeCamera',\n\n      'AmbientLight',\n      'DirectionalLight',\n      'HemisphereLight',\n      'PointLight',\n      'RectAreaLight',\n      'SpotLight',\n\n      'BasicMaterial',\n      'LambertMaterial',\n      'MatcapMaterial',\n      'PhongMaterial',\n      'PhysicalMaterial',\n      'PointsMaterial',\n      'ShaderMaterial',\n      'StandardMaterial',\n      'SubSurfaceMaterial',\n      'ToonMaterial',\n\n      'Texture',\n      'CubeTexture',\n\n      'BufferGeometry',\n\n      'Mesh',\n\n      'Box', 'BoxGeometry',\n      'Circle', 'CircleGeometry',\n      'Cone', 'ConeGeometry',\n      'Cylinder', 'CylinderGeometry',\n      'Dodecahedron', 'DodecahedronGeometry',\n      'Icosahedron', 'IcosahedronGeometry',\n      'Lathe', 'LatheGeometry',\n      'Octahedron', 'OctahedronGeometry',\n      'Plane', 'PlaneGeometry',\n      'Polyhedron', 'PolyhedronGeometry',\n      'Ring', 'RingGeometry',\n      'Sphere', 'SphereGeometry',\n      'Tetrahedron', 'TetrahedronGeometry',\n      'Text',\n      'Torus', 'TorusGeometry',\n      'TorusKnot', 'TorusKnotGeometry',\n      'Tube', 'TubeGeometry',\n\n      'Image',\n      'InstancedMesh',\n      'Points',\n      'Sprite',\n\n      'FbxModel',\n      'GltfModel',\n\n      'BokehPass',\n      'EffectComposer',\n      'FilmPass',\n      'FXAAPass',\n      'HalftonePass',\n      'RenderPass',\n      'SAOPass',\n      'SMAAPass',\n      'SSAOPass',\n      'TiltShiftPass',\n      'UnrealBloomPass',\n      'ZoomBlurPass',\n    ]\n\n    comps.forEach(comp => {\n      // @ts-ignore\n      app.component(comp, TROIS[comp])\n    })\n  },\n}\n\nexport function createApp(params: any): App {\n  return _createApp(params).use(TroisJSVuePlugin)\n}\n","import { Texture, TextureLoader } from 'three'\n\nexport interface TextureConfigInterface {\n  src: string\n}\n\nexport interface TexturesInterface {\n  loader: TextureLoader\n  count: number\n  textures: Texture[],\n  loadProgress: number\n  loadTextures(images: TextureConfigInterface[], cb: {() : void}): void\n  dispose(): void\n}\n\nexport default function useTextures(): TexturesInterface {\n  const obj: TexturesInterface = {\n    loader: new TextureLoader(),\n    count: 0,\n    textures: [],\n    loadProgress: 0,\n    loadTextures,\n    dispose,\n  }\n  return obj\n\n  function loadTextures(images: TextureConfigInterface[], cb: {() : void}) {\n    obj.count = images.length\n    obj.textures.splice(0)\n    obj.loadProgress = 0\n    Promise.all(images.map(loadTexture)).then(cb)\n  }\n\n  function loadTexture(img: TextureConfigInterface, index: number) {\n    return new Promise(resolve => {\n      obj.loader.load(\n        img.src,\n        texture => {\n          obj.loadProgress += 1 / obj.count\n          obj.textures[index] = texture\n          resolve(texture)\n        }\n      )\n    })\n  }\n\n  function dispose() {\n    obj.textures.forEach(t => t.dispose())\n  }\n}\n"],"names":["applyObjectProps","dst","options","setter","key","value","bindObjectProp","src","prop","apply","r","toRef","watch","bindObjectProps","ref","setFromProp","o","bindProps","props","bindProp","srcProp","dstProp","_dstProp","propsValues","exclude","values","lerp","value1","value2","amount","limit","val","min","max","MATCAP_ROOT","DEFAULT_MATCAP","getMatcapUrl","hash","format","fileName","getMatcapFormatString","n$2","EventDispatcher","object","domElement","_changeEvent","_startEvent","_endEvent","_ray","Ray","_plane","Plane","_TILT_LIMIT","MathUtils","_v","Vector3","_twoPI","_STATE","_EPS","OrbitControls","Controls","MOUSE","TOUCH","Quaternion","Spherical","Vector2","onPointerMove","onPointerDown","onPointerUp","onContextMenu","onMouseWheel","onKeyDown","onTouchStart","onTouchMove","onMouseDown","onMouseMove","interceptControlDown","interceptControlUp","deltaTime","position","zoomChanged","prevRadius","newRadius","radiusDelta","mouseBefore","prevZoom","mouseAfter","delta","normalizedDelta","angle","distance","objectMatrix","deltaX","deltaY","element","targetDistance","dollyScale","x","y","rect","dx","dy","w","h","dist","event","needsUpdate","centerX","centerY","i","pointerId","mode","newEvent","mouseAction","useRaycaster","camera","resetPosition","raycaster","Raycaster","plane","coords","objects","recursive","usePointer","intersectObjects","intersectRecursive","touch","resetOnEnd","onEnter","onMove","onDown","onUp","onLeave","onClick","onIntersectEnter","onIntersectOver","onIntersectMove","onIntersectLeave","onIntersectUp","onIntersectDown","onIntersectClick","positionN","positionV3","obj","addListeners","removeListeners","intersect","reset","updatePosition","_intersectObjects","getIntersectObjects","intersects","offObjects","iMeshes","_a","_b","_c","component","getComponent","InstancedMesh","overEvent","enterEvent","moveEvent","leaveEvent","pointerEnter","pointerMove","pointerDown","pointerUp","pointerClick","pointerLeave","parent","useThree","params","config","size","beforeRenderCallbacks","renderer","createRenderer","init","dispose","render","renderC","setSize","addIntersectObject","removeIntersectObject","WebGLRenderer","onResize","initPointer","cameraCtrl","onBeforeRender","pointerConf","pointer","cb","c","elt","width","height","pCamera","oCamera","wsize","getCameraSize","vFOV","RendererInjectionKey","defineComponent","attrs","initCallbacks","mountedCallbacks","afterRenderCallbacks","resizeCallbacks","canvas","matches","three","watchEffect","renderFn","scene","composer","e","type","callbacks","index","time","p$2","cameraSetProp","updateProjectionMatrix","OrthographicCamera","Camera","inject","p","PerspectiveCamera","v","SceneInjectionKey","Scene","provide","setBackground","Color","Texture","pointerProps","o3d","instance","getCurrentInstance","Group","Object3D","emptyCallBack","CubeCamera","rendererC","cubeRT","WebGLCubeRenderTarget","RGBAFormat","LinearMipmapLinearFilter","cubeCamera","updateRT","m","onUnmounted","MeshInjectionKey","Mesh","mesh","TMesh","geometry","material","oldGeo","meshComponent","name","createGeometry","Geometry","bufferAttributes","BufferGeometry","attribute","bufferAttribute","BufferAttribute","geometryComponent","comp","BoxGeometry","CircleGeometry","ConeGeometry","CylinderGeometry","DodecahedronGeometry","geometries","shape","ExtrudeGeometry","mergeGeometries","IcosahedronGeometry","LatheGeometry","OctahedronGeometry","PlaneGeometry","PolyhedronGeometry","RingGeometry","SphereGeometry","ShapeGeometry","TetrahedronGeometry","TorusGeometry","TorusKnotGeometry","Curve","curve","CatmullRomCurve3","TubeGeometry","points","updateTubeGeometryPoints","tube","radialSegments","radius","tubularSegments","closed","frames","pAttribute","nAttribute","normal","P","updateSegment","N","B","j","sin","cos","n","SpotLight","DirectionalLight","light","AmbientLight","Light","HemisphereLight","PointLight","RectAreaLight","RectAreaLightUniformsLib","lightHelper","RectAreaLightHelper","MaterialInjectionKey","BaseMaterial","dstVal","texture","materialComponent","createMaterial","BasicMaterial","opts","MeshBasicMaterial","LambertMaterial","MeshLambertMaterial","PhongMaterial","MeshPhongMaterial","PhysicalMaterial","MeshPhysicalMaterial","PointsMaterial","TPointsMaterial","ShadowMaterial","TShadowMaterial","StandardMaterial","MeshStandardMaterial","ToonMaterial","MeshToonMaterial","MatcapMaterial","TextureLoader","MeshMatcapMaterial","defaultVertexShader","defaultFragmentShader","ShaderMaterial","replaceAll","string","find","replace","meshphongFragHead","ShaderChunk","meshphongFragBody","SubsurfaceScatteringShader","UniformsUtils","ShaderLib","SubSurfaceMaterial","Material","uniforms","d","t","CubeTexture","CubeReflectionMapping","CubeTextureLoader","VideoTexture","video","Box","Circle","Cone","Cylinder","Dodecahedron","Icosahedron","Lathe","Octahedron","Polyhedron","Ring","Sphere","Tetrahedron","loader","FontLoader","font","TextGeometry","Torus","TorusKnot","Tube","DoubleSide","screen","iW","iH","iRatio","Sprite","SpriteMaterial","iWidth","iHeight","positions","Points","model","progress","error","GLTF","Model","GLTFLoader","gltf","FBX","FBXLoader","fbx","ComposerInjectionKey","EffectComposer","pass","s$2","RenderPass","EffectPass","BokehPass","FilmPass","FXAAPass","ShaderPass","FXAAShader","resolution","HalftonePass","SMAAPass","SSAOPass","r$1","DefaultShader","TiltShift","uniforms1","uniforms2","dv","UnrealBloomPass","ZoomBlur","GridHelper","TGridHelper","TroisJSVuePlugin","app","TROIS","createApp","_createApp","useTextures","loadTextures","images","loadTexture","img","resolve"],"mappings":"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"}